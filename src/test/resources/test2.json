//control+Alt+L
{
  "swagger": "2.0",
  "info": {
    "description": "<p>Use the API access to use features like search or get videos from the system</p><p>Contact AOL support to retrieve your company key</p>",
    "version": "1.0",
    "title": "API Service",
    "termsOfService": "AOL API Licence Type",
    "contact": {
      "name": "support@teamaol.com"
    },
    "license": {
      "name": "AOL API License URL",
      "url": "http://www.aol.com"
    }
  },
  "host": "api.vidible.tv",
  "basePath": "/",
  "tags": [
    {
      "name": "Ad Campaign CRUD",
      "description": "CRUD Ad campaign AOL O2 Portal operations"
    },
    {
      "name": "AdSet CRUD",
      "description": "Manipulate Ad Sets from AOL O2 portal"
    },
    {
      "name": "Company CRUD",
      "description": "CRUD company AOL O2 Portal operations"
    },
    {
      "name": "Company Export Library CRUD",
      "description": "Company Export Library operations"
    },
    {
      "name": "Feed CRUD",
      "description": "CRUD feed AOL O2 portal operations"
    },
    {
      "name": "Feed Video search",
      "description": "Search feed videos from AOL O2 portal"
    },
    {
      "name": "Pages retrieval",
      "description": "Pages retrieval AOL O2 Portal operations"
    },
    {
      "name": "Player CRUD",
      "description": "CRUD Player AOL O2 operations"
    },
    {
      "name": "Playlist CRUD (deprecated)",
      "description": "CRUD playlist AOL O2 Portal operations"
    },
    {
      "name": "Playlist CRUD new",
      "description": "CRUD playlist AOL O2 Portal operations"
    },
    {
      "name": "Seller Rule CRUD",
      "description": "CRUD Seller rule AOL O2 Portal operations"
    },
    {
      "name": "Smart Tag CRUD",
      "description": "CRUD Smart tag AOL O2 Portal operations"
    },
    {
      "name": "User CRUD",
      "description": "CRUD user AOL O2 Portal operations"
    },
    {
      "name": "Vast Tag CRUD",
      "description": "CRUD Vast Tag AOL O2 Portal operations"
    },
    {
      "name": "Video Ad Settings CRUD",
      "description": "Manipulate Video ad settings from AOL O2 portal"
    },
    {
      "name": "Video CRUD",
      "description": "CRUD video AOL O2 Portal operations"
    },
    {
      "name": "Video status",
      "description": "Check video accessibility & availability "
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/{companyKey}/adcampaign": {
      "post": {
        "tags": [
          "Ad Campaign CRUD"
        ],
        "summary": "Create an Ad Campaign",
        "description": "Contact AOL support to retrieve your company id (cid)<br>Be sure to add all meta-data required fields",
        "operationId": "createAdCampaign",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "adCampaign",
            "description": "Json object describing the ad campaign meta-data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdCampaignDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfAdCampaignDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/adset": {
      "put": {
        "tags": [
          "AdSet CRUD"
        ],
        "summary": "Create AdSet",
        "description": "<ul>\n<li>if the <code>companyId</code> is a WL then <code>parentCompanyId</code> is set to it, and if the company is affiliate, the <code>parentCopmanyId</code> is set to it's WL company;</li>\n<li><code>modifierId</code> is always updated to be equal to <code>ownerId</code>;</li>\n<li>If validation is failed, the response status is <code>400</code> and response body will contain error description;</li>\n<li>If referenced entity by id does not exist (eg. <code>ownerId</code>) then <code>500</code> status is returned;</li>\n<li>If ad set creation is succeed then <code>200</code> status is returned and the created ad set id in response body.</li>\n</ul>",
        "operationId": "createAdSet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "adSetDto",
            "description": "AdSet body to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdSetDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/ObjectId"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/adset/{ids}": {
      "get": {
        "tags": [
          "AdSet CRUD"
        ],
        "summary": "Get ad set by ids",
        "operationId": "listAdSets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "path",
            "description": "Ids of ad sets to get",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of ad sets to skip first",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of returned ad sets in the current results page",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdSetDto"
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/company": {
      "post": {
        "tags": [
          "Company CRUD"
        ],
        "summary": "Create a company",
        "description": "Contact AOL support to retrieve your company id (cid)<br>Be sure to add all meta-data required fields",
        "operationId": "createCompany",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "companyDto",
            "description": "Json object describing the company meta-data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/CompanyDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "put": {
        "tags": [
          "Company CRUD"
        ],
        "summary": "Update a company",
        "description": "Contact AOL support to retrieve your company id (cid)<br>Be sure to add all meta-data required fields",
        "operationId": "updateCompany",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "companyDto",
            "description": "Json object describing the video meta-data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/CompanyDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/company/search": {
      "get": {
        "tags": [
          "Company CRUD"
        ],
        "summary": "Get companies by query",
        "operationId": "searchCompanies",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "description": "query of company search, length limit: 500, search terms limit: 10, allowed symbols: [^a-zA-Z0-9_+\\-:.()\"*?&|!{}\\[\\]\\^~\\\\@#/$%'=>< ]",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of companies to skip first",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of companies to return",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "hasvideo",
            "in": "query",
            "description": "return only companies with videos",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort videos by ",
            "required": false,
            "type": "string"
          },
          {
            "name": "ascending",
            "in": "query",
            "description": "is ascending sort",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CompanyDto"
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/company/{companyId}/feed": {
      "get": {
        "tags": [
          "Feed CRUD"
        ],
        "summary": "Get feeds by company id",
        "operationId": "listFeedsForCompany",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of feeds to skip first",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of feeds to return",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Id of company",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfListOfFeedDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/company/{ids}": {
      "get": {
        "tags": [
          "Company CRUD"
        ],
        "summary": "Get companies by ids",
        "operationId": "listCompanies",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "path",
            "description": "Ids of companies to get",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of companies to skip first",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of returned companies in the current results page",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CompanyDto"
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/companyexportlibrary": {
      "post": {
        "tags": [
          "Company Export Library CRUD"
        ],
        "summary": "Create Company Export Library",
        "operationId": "createCompanyExportLibrary",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "companyExportLibraryDto",
            "description": "Json object describing the company export library",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyExportLibraryDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfCompanyExportLibraryDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/companyexportlibrary/{companyLibraryId}": {
      "put": {
        "tags": [
          "Company Export Library CRUD"
        ],
        "summary": "Update Company Export Library",
        "operationId": "updateCompanyExportLibrary",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyLibraryId",
            "in": "path",
            "description": "Company Library Id for replace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "companyExportLibraryDto",
            "description": "Json object describing the company export library",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyExportLibraryDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfCompanyExportLibraryDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/companyexportlibrary/{ids}": {
      "get": {
        "tags": [
          "Company Export Library CRUD"
        ],
        "summary": "Get CompanyExport Library by id",
        "operationId": "listCompanyExportLibraries",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "path",
            "description": "Ids of Company Export Library to get",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of Company Export Library's to skip first",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of Company Export Library's to return",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfListOfCompanyExportLibraryDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/companyexportlibrary/{id}": {
      "delete": {
        "tags": [
          "Company Export Library CRUD"
        ],
        "summary": "Delete a Company Export Library",
        "operationId": "deleteCompanyExportLibrary",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of Company Export Library to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfCompanyExportLibraryDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/feed/{ids}": {
      "get": {
        "tags": [
          "Feed CRUD"
        ],
        "summary": "Get feeds by ids",
        "operationId": "listFeeds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "path",
            "description": "Ids of feeds",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfListOfFeedDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/mrss/{feedId}/video": {
      "get": {
        "tags": [
          "Feed Video search"
        ],
        "summary": "Find feed video by its id in the feed (&lt;guid&gt;)",
        "operationId": "getStatusForFeedVideo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "Id of the feed",
            "required": true,
            "type": "string"
          },
          {
            "name": "rssVideoId",
            "in": "query",
            "description": "Id of the feed video (as it is in the feed). <br/>e.g. as in &lt;guid&gt;id_of_video&lt;guid/&gt;",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status of the video",
            "required": false,
            "type": "string",
            "enum": [
              "pending",
              "encoding",
              "propagating",
              "ready",
              "failed"
            ]
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of videos to skip first",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of returned video statuses in the current results page",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VideoStatusView"
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/pages/search": {
      "get": {
        "tags": [
          "Pages retrieval"
        ],
        "summary": "Search pages",
        "operationId": "searchPages",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Query for pages search, length limit: 500, search terms limit: 10, allowed symbols: [^a-zA-Z0-9_+\\-:.()\"*?&|!{}\\[\\]\\^~\\\\@#/$%'=>< ]",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of pages to skip first. Maximum value is 10000. To go over this amount use scroll functionality. See \"initScroll\" parameter description.",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of pages to return",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort pages by ",
            "required": false,
            "type": "string"
          },
          {
            "name": "ascending",
            "in": "query",
            "description": "is ascending sort",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "initScroll",
            "in": "query",
            "description": "Needed to initialize scroll search request. Response will return first chunk (with size of limit) of search result and \"scrollId\". To retrieve next chunks of search result \"scrollId\" should be used. All next chunks will have size <= \"limit\" of initial request. Initiating scroll with same query is allowed once per minute.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "scrollId",
            "in": "query",
            "description": "Scroll id. See description of \"initScroll\" parameter. Each next chunk should be retrieved with \"scrollId\" from the response of previous chunk. \"scrollId\" is valid for 1 minute. After 1 minute there is no way to continue scrolling. Only initiate scrolling from scratch",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfListOfPageDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/pages/{ids}": {
      "get": {
        "tags": [
          "Pages retrieval"
        ],
        "summary": "Get pages by ids",
        "operationId": "listPages",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "path",
            "description": "Ids of pages to get",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of pages to skip first",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of returned pages in the current results page",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfListOfPageDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/pid={pid}": {
      "get": {
        "tags": [
          "Video CRUD"
        ],
        "summary": "Get videos from player",
        "operationId": "listVideosByPlayer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "pid",
            "in": "path",
            "description": "Player id to get videos from",
            "required": true,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Amount of videos to return (if offset is not passed)",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of videos to skip first",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of returned videos in the current results page",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          },
          {
            "name": "width",
            "in": "query",
            "description": "Desired width to select best video rendition for",
            "required": false,
            "type": "integer",
            "default": 640,
            "format": "int32"
          },
          {
            "name": "height",
            "in": "query",
            "description": "Desired height to select best video rendition for",
            "required": false,
            "type": "integer",
            "default": 480,
            "format": "int32"
          },
          {
            "name": "show_metadata",
            "in": "query",
            "description": "Include or exclude meta data fields",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "show_transcript",
            "in": "query",
            "description": "Include or exclude transcript field",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "show_thumbnails",
            "in": "query",
            "description": "Include or exclude thumbnails",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "show_renditions",
            "in": "query",
            "description": "Include or exclude encoded variants",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "show_number_of_videos",
            "in": "query",
            "description": "Include or exclude total number of videos",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showOriginalVideoUrl",
            "in": "query",
            "description": "Show original video url",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showCuePoints",
            "in": "query",
            "description": "Show video cue points",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showCarmotMetadata",
            "in": "query",
            "description": "Show video carmot metadata",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showPublisherViews",
            "in": "query",
            "description": "Show publisher video views",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "media",
            "in": "query",
            "description": "Desired extension videos, that will be returned. For example: mp4, ogg. If didn't find anything, try search without this parameter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VideoDto"
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/player": {
      "post": {
        "tags": [
          "Player CRUD"
        ],
        "summary": "Create player for the company by partial data and generate tag",
        "description": "<ul>\n<li>If the company <code>companyId</code> is a WL <code>parentCompanyId</code> is set to it, and if the company is affiliate, the <code>parentCompanyId</code> is set to it's WL company;</li>\n<li><code>modifierId</code> is always set to be equal to <code>ownerId</code>;</li>\n<li>Fields that are omitted in the request body will be preserved with default values. Set fields to <code>null</code> explicitly if needed;</li>\n<li>New template will be created from the player;</li>\n<li>If validation is failed, the response status is <code>400</code> and response body will contain error description;</li>\n<li>If referenced entity by id does not exist (eg. <code>playlistId</code>) then <code>500</code> status is returned;</li>\n<li>If player creation is succeed then <code>200</code> status is returned and in response body <code>json</code> with player id and generated tag for created player.</li>\n</ul>",
        "operationId": "createPlayerByPartialDataAndGenerateTagUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "query",
            "description": "User id. Will be set like tag generation creator",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "partialPlayer",
            "description": "Partial player data to initialize player with",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialPlayerDto"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Type for player tag generation",
            "required": true,
            "type": "string",
            "default": "STANDARD",
            "enum": [
              "STANDARD",
              "STANDARD_SECURE",
              "STATIC_IMPRESSION",
              "STATIC_IMPRESSION_SECURE",
              "DYNAMIC_IFRAME",
              "STATIC_IFRAME",
              "BRIGHTCOVE",
              "FLOWPLAYER",
              "STANDARD_NIELSEN",
              "STATIC_IMPRESSION_NIELSEN",
              "LEGACY_STANDARD",
              "LEGACY_STANDARD_SECURE",
              "LEGACY_STATIC_IMPRESSION",
              "LEGACY_STATIC_IMPRESSION_SECURE",
              "BEIN_JS",
              "VAST",
              "VAST_SECURE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/ResponseStatus"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "put": {
        "tags": [
          "Player CRUD"
        ],
        "summary": "Create player for the company and generate tag",
        "description": "<ul>\n<li>If the company <code>companyId</code> is a WL <code>parentCompanyId</code> is set to it, and if the company is affiliate, the <code>parentCompanyId</code> is set to it's WL company;</li>\n<li><code>modifierId</code> is always set to be equal to <code>ownerId</code>;</li>\n<li>If <code>templateId</code> is not set then new template will be created from the player;</li>\n<li>If validation is failed, the response status is <code>400</code> and response body will contain error description;</li>\n<li>If referenced entity by id does not exist (eg. <code>bidId</code>) then <code>500</code> status is returned;</li>\n<li>If player creation is succeed then <code>200</code> status is returned and in response body <code>json</code> with player id and generated tag for created player.</li>\n</ul>",
        "operationId": "createPlayerByFullDataAndGenerateTagUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "query",
            "description": "User id. Will be set like tag generation creator",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "playerDto",
            "description": "Player body to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlayerDto"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Type for player tag generation",
            "required": true,
            "type": "string",
            "default": "STANDARD",
            "enum": [
              "STANDARD",
              "STANDARD_SECURE",
              "STATIC_IMPRESSION",
              "STATIC_IMPRESSION_SECURE",
              "DYNAMIC_IFRAME",
              "STATIC_IFRAME",
              "BRIGHTCOVE",
              "FLOWPLAYER",
              "STANDARD_NIELSEN",
              "STATIC_IMPRESSION_NIELSEN",
              "LEGACY_STANDARD",
              "LEGACY_STANDARD_SECURE",
              "LEGACY_STATIC_IMPRESSION",
              "LEGACY_STATIC_IMPRESSION_SECURE",
              "BEIN_JS",
              "VAST",
              "VAST_SECURE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/PlayerCreationResponse"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/player/{ids}": {
      "get": {
        "tags": [
          "Player CRUD"
        ],
        "summary": "Get player by ids",
        "operationId": "listPlayers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "path",
            "description": "Player ids",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfListOfPlayerDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/player/{pid}": {
      "put": {
        "tags": [
          "Player CRUD"
        ],
        "summary": "Update player for the company",
        "description": "<ul>\n<li>If <code>templateId</code> is not set then new template will be created from the player;</li>\n<li>If validation is failed, the response status is <code>400</code> and response body will contain error description;</li>\n<li>If referenced entity by id does not exist (eg. <code>bidId</code>) then <code>500</code> status is returned;</li>\n<li>If player update is succeed then <code>200</code> status is returned and the updated player id in response body.</li>\n</ul>",
        "operationId": "updatePlayerByFullDataUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "pid",
            "in": "path",
            "description": "Player Id to modify",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "player",
            "description": "Player body to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlayerDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/ObjectId"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/player/{pid}/adset": {
      "put": {
        "tags": [
          "Player CRUD"
        ],
        "summary": "Set AdSet collection for the player",
        "description": "AdSet IDs are set replacing existing.",
        "operationId": "setPlayerAdSetIdsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "pid",
            "in": "path",
            "description": "Player id to modify",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "adSetIds",
            "description": "AdSet list to be set for the player",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ObjectId"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "type": "string",
              "enum": [
                "100 CONTINUE",
                "101 SWITCHING_PROTOCOLS",
                "102 PROCESSING",
                "103 CHECKPOINT",
                "200 OK",
                "201 CREATED",
                "202 ACCEPTED",
                "203 NON_AUTHORITATIVE_INFORMATION",
                "204 NO_CONTENT",
                "205 RESET_CONTENT",
                "206 PARTIAL_CONTENT",
                "207 MULTI_STATUS",
                "208 ALREADY_REPORTED",
                "226 IM_USED",
                "300 MULTIPLE_CHOICES",
                "301 MOVED_PERMANENTLY",
                "302 FOUND",
                "302 MOVED_TEMPORARILY",
                "303 SEE_OTHER",
                "304 NOT_MODIFIED",
                "305 USE_PROXY",
                "307 TEMPORARY_REDIRECT",
                "308 PERMANENT_REDIRECT",
                "400 BAD_REQUEST",
                "401 UNAUTHORIZED",
                "402 PAYMENT_REQUIRED",
                "403 FORBIDDEN",
                "404 NOT_FOUND",
                "405 METHOD_NOT_ALLOWED",
                "406 NOT_ACCEPTABLE",
                "407 PROXY_AUTHENTICATION_REQUIRED",
                "408 REQUEST_TIMEOUT",
                "409 CONFLICT",
                "410 GONE",
                "411 LENGTH_REQUIRED",
                "412 PRECONDITION_FAILED",
                "413 PAYLOAD_TOO_LARGE",
                "413 REQUEST_ENTITY_TOO_LARGE",
                "414 URI_TOO_LONG",
                "414 REQUEST_URI_TOO_LONG",
                "415 UNSUPPORTED_MEDIA_TYPE",
                "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                "417 EXPECTATION_FAILED",
                "418 I_AM_A_TEAPOT",
                "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                "420 METHOD_FAILURE",
                "421 DESTINATION_LOCKED",
                "422 UNPROCESSABLE_ENTITY",
                "423 LOCKED",
                "424 FAILED_DEPENDENCY",
                "426 UPGRADE_REQUIRED",
                "428 PRECONDITION_REQUIRED",
                "429 TOO_MANY_REQUESTS",
                "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                "500 INTERNAL_SERVER_ERROR",
                "501 NOT_IMPLEMENTED",
                "502 BAD_GATEWAY",
                "503 SERVICE_UNAVAILABLE",
                "504 GATEWAY_TIMEOUT",
                "505 HTTP_VERSION_NOT_SUPPORTED",
                "506 VARIANT_ALSO_NEGOTIATES",
                "507 INSUFFICIENT_STORAGE",
                "508 LOOP_DETECTED",
                "509 BANDWIDTH_LIMIT_EXCEEDED",
                "510 NOT_EXTENDED",
                "511 NETWORK_AUTHENTICATION_REQUIRED"
              ]
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/player/{pid}/tag": {
      "get": {
        "tags": [
          "Player CRUD"
        ],
        "summary": "Generate tag for player",
        "description": "Default tag type is 'STANDARD'",
        "operationId": "getPlayerTagUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "pid",
            "in": "path",
            "description": "Player Id to generate tag for",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Tag type",
            "required": false,
            "type": "string",
            "default": "STANDARD",
            "enum": [
              "STANDARD",
              "STANDARD_SECURE",
              "STATIC_IMPRESSION",
              "STATIC_IMPRESSION_SECURE",
              "DYNAMIC_IFRAME",
              "STATIC_IFRAME",
              "BRIGHTCOVE",
              "FLOWPLAYER",
              "STANDARD_NIELSEN",
              "STATIC_IMPRESSION_NIELSEN",
              "LEGACY_STANDARD",
              "LEGACY_STANDARD_SECURE",
              "LEGACY_STATIC_IMPRESSION",
              "LEGACY_STATIC_IMPRESSION_SECURE",
              "BEIN_JS",
              "VAST",
              "VAST_SECURE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/playlist/search": {
      "get": {
        "tags": [
          "Playlist CRUD (deprecated)"
        ],
        "summary": "Get playlists by search query",
        "operationId": "searchPlaylists",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Query for playlist search, length limit: 500, search terms limit: 10, allowed symbols: [^a-zA-Z0-9_+\\-:.()\"*?&|!{}\\[\\]\\^~\\\\@#/$%'=>< ]",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of playlists to skip first. Maximum value is 10000. To go over this amount use scroll functionality. See \"initScroll\" parameter description.",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of returned playlists in the current results page",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort playlists by ",
            "required": false,
            "type": "string"
          },
          {
            "name": "ascending",
            "in": "query",
            "description": "is ascending sort",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "initScroll",
            "in": "query",
            "description": "Needed to initialize scroll search request. Response will return first chunk (with size of limit) of search result and \"scrollId\". To retrieve next chunks of search result \"scrollId\" should be used. All next chunks will have size <= \"limit\" of initial request. Initiating scroll with same query is allowed once per minute.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "scrollId",
            "in": "query",
            "description": "Scroll id. See description of \"initScroll\" parameter. Each next chunk should be retrieved with \"scrollId\" from the response of previous chunk. \"scrollId\" is valid for 1 minute. After 1 minute there is no way to continue scrolling. Only initiate scrolling from scratch",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/PlaylistResponseDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "deprecated": true
      }
    },
    "/{companyKey}/playlist/{ids}": {
      "get": {
        "tags": [
          "Playlist CRUD (deprecated)"
        ],
        "summary": "Get playlists by ids",
        "operationId": "listPlaylists",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "path",
            "description": "Ids of playlists to get",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of playlists to skip first",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of returned playlists in the current results page",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/PlaylistResponseDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "deprecated": true
      }
    },
    "/{companyKey}/playlistng": {
      "post": {
        "tags": [
          "Playlist CRUD new"
        ],
        "summary": "Create a playlist",
        "operationId": "createPlaylist_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "playlistDto",
            "description": "Json object describing the playlist",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlaylistDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfPlaylistDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "put": {
        "tags": [
          "Playlist CRUD new"
        ],
        "summary": "Update a playlist",
        "operationId": "updatePlaylist_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "playlistDto",
            "description": "Json object describing the playlist",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlaylistDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfPlaylistDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/playlistng/search": {
      "get": {
        "tags": [
          "Playlist CRUD new"
        ],
        "summary": "Search playlists",
        "operationId": "searchPlaylists_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "description": "query for  playlist search, length limit: 500, search terms limit: 10, allowed symbols: [^a-zA-Z0-9_+\\-:.()\"*?&|!{}\\[\\]\\^~\\\\@#/$%'=>< ]",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of playlists to skip first. Maximum value is 10000. To go over this amount use scroll functionality. See \"initScroll\" parameter description.",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of playlists to return",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort playlists by ",
            "required": false,
            "type": "string"
          },
          {
            "name": "ascending",
            "in": "query",
            "description": "is ascending sort",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "initScroll",
            "in": "query",
            "description": "Needed to initialize scroll search request. Response will return first chunk (with size of limit) of search result and \"scrollId\". To retrieve next chunks of search result \"scrollId\" should be used. All next chunks will have size <= \"limit\" of initial request. Initiating scroll with same query is allowed once per minute.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "scrollId",
            "in": "query",
            "description": "Scroll id. See description of \"initScroll\" parameter. Each next chunk should be retrieved with \"scrollId\" from the response of previous chunk. \"scrollId\" is valid for 1 minute. After 1 minute there is no way to continue scrolling. Only initiate scrolling from scratch",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfListOfPlaylistDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/playlistng/videos/{id}": {
      "get": {
        "tags": [
          "Playlist CRUD new"
        ],
        "summary": "Get videos by playlist id",
        "operationId": "getPlaylistVideosUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of playlist to get videos from it",
            "required": true,
            "type": "string"
          },
          {
            "name": "media",
            "in": "query",
            "description": "Desired extension videos, that will be returned. For example: mp4, ogg. If didn't find anything, try search without this parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of videos to return",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/ResponseStatus"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/playlistng/{ids}": {
      "get": {
        "tags": [
          "Playlist CRUD new"
        ],
        "summary": "Get playlist by id",
        "operationId": "getByIdsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "path",
            "description": "Id of playlist to get",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of playlists to skip first",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of returned playlists in the current results page",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/ResponseStatus"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/playlistng/{id}": {
      "delete": {
        "tags": [
          "Playlist CRUD new"
        ],
        "summary": "Delete a playlist",
        "operationId": "deletePlaylist_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of play list to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfPlaylistDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/sellerrule": {
      "post": {
        "tags": [
          "Seller Rule CRUD"
        ],
        "summary": "Create a seller rule",
        "description": "Contact AOL support to retrieve your company id (cid)<br>Be sure to add all meta-data required fields",
        "operationId": "createSellerRule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "sellerRuleDto",
            "description": "Json object describing the seller rule meta-data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SellerRuleDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfSellerRuleDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/sellerrule/search": {
      "get": {
        "tags": [
          "Seller Rule CRUD"
        ],
        "summary": "Search seller rules",
        "operationId": "searchSellerRules",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "description": "query for seller rule search, length limit: 500, search terms limit: 10, allowed symbols: [^a-zA-Z0-9_+\\-:.()\"*?&|!{}\\[\\]\\^~\\\\@#/$%'=>< ]",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of seller rules to skip first",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of seller rules to return",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort seller rules by ",
            "required": false,
            "type": "string"
          },
          {
            "name": "ascending",
            "in": "query",
            "description": "is ascending sort",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "initScroll",
            "in": "query",
            "description": "Needed to initialize scroll search request. Response will return first chunk (with size of limit) of search result and \"scrollId\". To retrieve next chunks of search result \"scrollId\" should be used. All next chunks will have size <= \"limit\" of initial request. Initiating scroll with same query is allowed once per minute.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "scrollId",
            "in": "query",
            "description": "Scroll id. See description of \"initScroll\" parameter. Each next chunk should be retrieved with \"scrollId\" from the response of previous chunk. \"scrollId\" is valid for 1 minute. After 1 minute there is no way to continue scrolling. Only initiate scrolling from scratch",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfListOfSellerRuleDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/sellerrule/{ids}": {
      "get": {
        "tags": [
          "Seller Rule CRUD"
        ],
        "summary": "Get seller rule by id",
        "operationId": "listSellerRules",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "path",
            "description": "Id of seller rule ID to get",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of seller rules to skip first",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of seller rules to return",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfListOfSellerRuleDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/sellerrule/{id}": {
      "delete": {
        "tags": [
          "Seller Rule CRUD"
        ],
        "summary": "Delete a sellerRule",
        "description": "Contact AOL support to retrieve your company id (cid)<br>Be sure to add all meta-data required fields",
        "operationId": "deleteSellerRule",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "seller rule id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfSellerRuleDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/sellerrule/{sellerRuleId}": {
      "put": {
        "tags": [
          "Seller Rule CRUD"
        ],
        "summary": "Update a Seller Rule",
        "description": "Contact AOL support to retrieve your company id (cid)<br>Be sure to add all meta-data required fields",
        "operationId": "updateSellerRule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "sellerRuleId",
            "in": "path",
            "description": "Id of SellerRule that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "sellerRule",
            "description": "Json object describing the seller rule meta-data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SellerRuleDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfSellerRuleDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/smarttag": {
      "post": {
        "tags": [
          "Smart Tag CRUD"
        ],
        "summary": "Create a smart tag",
        "operationId": "createSmartTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "smartTagDto",
            "description": "Json object describing the smart tag",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SmartTagDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfSmartTagDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/smarttag/search": {
      "get": {
        "tags": [
          "Smart Tag CRUD"
        ],
        "summary": "Search smart tags",
        "operationId": "searchSmartTags",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "description": "query for smart tag search, length limit: 500, search terms limit: 10, allowed symbols: [^a-zA-Z0-9_+\\-:.()\"*?&|!{}\\[\\]\\^~\\\\@#/$%'=>< ]",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of smart tags to skip first",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of smart tags to return",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort smart tags by ",
            "required": false,
            "type": "string"
          },
          {
            "name": "ascending",
            "in": "query",
            "description": "is ascending sort",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "initScroll",
            "in": "query",
            "description": "Needed to initialize scroll search request. Response will return first chunk (with size of limit) of search result and \"scrollId\". To retrieve next chunks of search result \"scrollId\" should be used. All next chunks will have size <= \"limit\" of initial request. Initiating scroll with same query is allowed once per minute.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "scrollId",
            "in": "query",
            "description": "Scroll id. See description of \"initScroll\" parameter. Each next chunk should be retrieved with \"scrollId\" from the response of previous chunk. \"scrollId\" is valid for 1 minute. After 1 minute there is no way to continue scrolling. Only initiate scrolling from scratch",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfListOfSmartTagDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/smarttag/{ids}": {
      "get": {
        "tags": [
          "Smart Tag CRUD"
        ],
        "summary": "Get smart tags by ids",
        "operationId": "listSmartTags",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "path",
            "description": "Ids of smart tags to get",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of smart tags to skip first",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of returned smart tags in the current results page",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfListOfSmartTagDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/smarttag/{id}": {
      "delete": {
        "tags": [
          "Smart Tag CRUD"
        ],
        "summary": "Delete a smart tag",
        "operationId": "deleteSmartTag",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of smart tag to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfSmartTagDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/smarttag/{smartTagId}": {
      "put": {
        "tags": [
          "Smart Tag CRUD"
        ],
        "summary": "Update a smart tag",
        "operationId": "updateSmartTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "smartTagId",
            "in": "path",
            "description": "Id of SmartTag that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "smartTagDto",
            "description": "Json object describing the smart tag data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SmartTagDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfSmartTagDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/user": {
      "post": {
        "tags": [
          "User CRUD"
        ],
        "summary": "Create a user",
        "operationId": "createUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "userDto",
            "description": "Json object describing the user data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfUserDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/user/search": {
      "get": {
        "tags": [
          "User CRUD"
        ],
        "summary": "Search users",
        "operationId": "searchUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "description": "query of user search, length limit: 500, search terms limit: 10, allowed symbols: [^a-zA-Z0-9_+\\-:.()\"*?&|!{}\\[\\]\\^~\\\\@#/$%'=>< ]",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of users to skip first",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of users to return",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort users by ",
            "required": false,
            "type": "string"
          },
          {
            "name": "ascending",
            "in": "query",
            "description": "is ascending sort",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfListOfUserDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/user/{ids}": {
      "get": {
        "tags": [
          "User CRUD"
        ],
        "summary": "Get users by ids",
        "operationId": "listUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "path",
            "description": "Ids of users to get",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of users to skip first",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of users to return",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfListOfUserDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/user/{id}": {
      "delete": {
        "tags": [
          "User CRUD"
        ],
        "summary": "Delete a user",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfUserDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/user/{userId}": {
      "put": {
        "tags": [
          "User CRUD"
        ],
        "summary": "Update a user",
        "operationId": "updateUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Id of User that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "userDto",
            "description": "Json object describing the user data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfUserDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/vasttag": {
      "post": {
        "tags": [
          "Vast Tag CRUD"
        ],
        "summary": "Create a VAST tag",
        "description": "Contact AOL support to retrieve your company id (cid)<br>Be sure to add all meta-data required fields",
        "operationId": "createVastTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "vastTagDto",
            "description": "Json object describing the VAST tag meta-data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VastTagDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfVastTagDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/video": {
      "post": {
        "tags": [
          "Video CRUD"
        ],
        "summary": "Create a video",
        "description": "Contact AOL support to retrieve your company id (cid)<br>Be sure to add all meta-data required fields",
        "operationId": "createVideo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "videoDto",
            "description": "Json object describing the video meta-data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VideoDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/VideoDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "put": {
        "tags": [
          "Video CRUD"
        ],
        "summary": "Update a video",
        "description": "Contact AOL support to retrieve your company id (cid)<br>Be sure to add all meta-data required fields",
        "operationId": "updateVideo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "videoDto",
            "description": "Json object describing the video meta-data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VideoDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/VideoDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "tags": [
          "Video CRUD"
        ],
        "summary": "Delete a video",
        "description": "Contact AOL support to retrieve your company id (cid)<br>Be sure to add all meta-data required fields",
        "operationId": "deleteVideo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "videoDto",
            "description": "Json object describing the video meta-data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VideoDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/VideoDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/video/clientSearch": {
      "get": {
        "tags": [
          "Video CRUD"
        ],
        "summary": "Find videos by search query",
        "description": "Contact AOL support to retrieve your company id (cid)<br>Be sure to add all meta-data required fields",
        "operationId": "searchClientVideos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "pid",
            "in": "query",
            "description": "Player Id to add embed code for each video",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Query string to be searched against, length limit: 500, search terms limit: 10, allowed symbols: [^a-zA-Z0-9_+\\-:.()\"*?&|!{}\\[\\]\\^~\\\\@#/$%'=>< ]",
            "required": false,
            "type": "string"
          },
          {
            "name": "media",
            "in": "query",
            "description": "Desired extension videos, that will be returned. For example: mp4, ogg. If didn't find anything, try search without this parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of videos to skip first",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of videos to return",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "transcript",
            "in": "query",
            "description": "Include transcript from videos, if available",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort videos by ",
            "required": false,
            "type": "string"
          },
          {
            "name": "ascending",
            "in": "query",
            "description": "is ascending sort",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showNumberOfVideos",
            "in": "query",
            "description": "Include or exclude total number of videos",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showOriginalVideoUrl",
            "in": "query",
            "description": "Show original video url",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "thumbnailHeight",
            "in": "query",
            "description": "Desired thumbnail height",
            "required": false,
            "type": "integer",
            "default": 480,
            "format": "int32"
          },
          {
            "name": "thumbnailWidth",
            "in": "query",
            "description": "Desired thumbnail width",
            "required": false,
            "type": "integer",
            "default": 640,
            "format": "int32"
          },
          {
            "name": "ready",
            "in": "query",
            "description": "Show only videos with \"Ready\" upload state ",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClientVideoDto"
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/video/search": {
      "get": {
        "tags": [
          "Video CRUD"
        ],
        "summary": "Find videos by search query",
        "description": "Contact AOL support to retrieve your company id (cid)<br>Be sure to add all meta-data required fields",
        "operationId": "searchVideos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Query string to be searched against, length limit: 500, search terms limit: 10, allowed symbols: [^a-zA-Z0-9_+\\-:.()\"*?&|!{}\\[\\]\\^~\\\\@#/$%'=>< ]",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of videos to skip first. Maximum value is 10000. To go over this amount use scroll functionality. Scrolling goes through all the found entities (offset is ignored). See \"initScroll\" parameter description.",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of videos to return",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort videos by ",
            "required": false,
            "type": "string"
          },
          {
            "name": "ascending",
            "in": "query",
            "description": "is ascending sort",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showOriginalVideoUrl",
            "in": "query",
            "description": "Show original video url",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showCarmotMetadata",
            "in": "query",
            "description": "Show video carmot metadata",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showPublisherViews",
            "in": "query",
            "description": "Show publisher video views",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "pid",
            "in": "query",
            "description": "Player id to generate embed Player Tag",
            "required": false,
            "type": "string"
          },
          {
            "name": "media",
            "in": "query",
            "description": "Desired extension videos, that will be returned. For example: mp4, ogg. If didn't find anything, try search without this parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "initScroll",
            "in": "query",
            "description": "Needed to initialize scroll search request. Response will return first chunk (with size of limit) of search result and \"scrollId\". To retrieve next chunks of search result \"scrollId\" should be used. All next chunks will have size <= \"limit\" of initial request. Initiating scroll with same query is allowed once per minute.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "scrollId",
            "in": "query",
            "description": "Scroll id. See description of \"initScroll\" parameter. Each next chunk should be retrieved with \"scrollId\" from the response of previous chunk. \"scrollId\" is valid for 1 minute. After 1 minute there is no way to continue scrolling. Only initiate scrolling from scratch",
            "required": false,
            "type": "string"
          },
          {
            "name": "ready",
            "in": "query",
            "description": "Show only videos with \"Ready\" upload state ",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "$ref": "#/definitions/OperationResultOfListOfVideoDto"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/video/status/{ids}": {
      "get": {
        "tags": [
          "Video status"
        ],
        "summary": "Get status of videos by ids",
        "operationId": "listVideoStatuses",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "path",
            "description": "Ids of videos to get status for",
            "required": true,
            "type": "string"
          },
          {
            "name": "bcid",
            "in": "query",
            "description": "Buyer company id of an affiliate",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of ids to skip first",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of returned results in the current results page",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          },
          {
            "name": "geoRestrictions",
            "in": "query",
            "description": "List of countries(ISO-3 country codes) for which videos should be allowed",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Return video with specified status",
            "required": false,
            "type": "string",
            "default": "ALL",
            "enum": [
              "ALL",
              "AVAILABLE",
              "UNAVAILABLE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VideoStatus"
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/video/{ids}": {
      "get": {
        "tags": [
          "Video CRUD"
        ],
        "summary": "Get videos by ids",
        "operationId": "listVideos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "path",
            "description": "Ids of videos to get",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of videos to skip first",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "show_metadata",
            "in": "query",
            "description": "Include or exclude meta data fields",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "show_transcript",
            "in": "query",
            "description": "Include or exclude transcript field",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "show_thumbnails",
            "in": "query",
            "description": "Include or exclude thumbnails",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "show_renditions",
            "in": "query",
            "description": "Include or exclude encoded variants",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "showOriginalVideoUrl",
            "in": "query",
            "description": "Show original video url",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showCuePoints",
            "in": "query",
            "description": "Show video cue points",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showCarmotMetadata",
            "in": "query",
            "description": "Show video carmot metadata",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showPublisherViews",
            "in": "query",
            "description": "Show publisher video views",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "pid",
            "in": "query",
            "description": "Player id to generate embed Player Tag",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VideoDto"
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/videoadsettings/{ids}": {
      "get": {
        "tags": [
          "Video Ad Settings CRUD"
        ],
        "summary": "Get video ad settings by ids",
        "operationId": "listVideoAdSettings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "path",
            "description": "Ids of video ad settings to get",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of video ad settings to skip first",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of returned video ad sets in the current results page",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VideoAdSettingsDto"
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/{companyKey}/{bid}": {
      "get": {
        "tags": [
          "Video CRUD"
        ],
        "summary": "Get videos from playlist",
        "operationId": "listVideosByPlaylist",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyKey",
            "in": "path",
            "description": "API Key for the company",
            "required": true,
            "type": "string"
          },
          {
            "name": "bid",
            "in": "path",
            "description": "Playlist id to get videos from",
            "required": true,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Amount of videos to return (if offset is not passed)",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Amount of videos to skip first",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Amount of returned videos in the current results page",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          },
          {
            "name": "width",
            "in": "query",
            "description": "Desired width to select best video rendition for",
            "required": false,
            "type": "integer",
            "default": 640,
            "format": "int32"
          },
          {
            "name": "height",
            "in": "query",
            "description": "Desired height to select best video rendition for",
            "required": false,
            "type": "integer",
            "default": 480,
            "format": "int32"
          },
          {
            "name": "show_metadata",
            "in": "query",
            "description": "Include or exclude meta data fields",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "show_transcript",
            "in": "query",
            "description": "Include or exclude transcript field",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "show_thumbnails",
            "in": "query",
            "description": "Include or exclude thumbnails",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "show_renditions",
            "in": "query",
            "description": "Include or exclude encoded variants",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "show_number_of_videos",
            "in": "query",
            "description": "Include or exclude total number of videos",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showOriginalVideoUrl",
            "in": "query",
            "description": "Show original video url",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showCuePoints",
            "in": "query",
            "description": "Show video cue points",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showCarmotMetadata",
            "in": "query",
            "description": "Show video carmot metadata",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showPublisherViews",
            "in": "query",
            "description": "Show publisher video views",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "pid",
            "in": "query",
            "description": "Player id to generate embed Player Tag",
            "required": false,
            "type": "string"
          },
          {
            "name": "media",
            "in": "query",
            "description": "Desired extension videos, that will be returned. For example: mp4, ogg. If didn't find anything, try search without this parameter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Completed successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VideoDto"
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    }
  },
  "definitions": {
    "AdCampaignDto": {
      "type": "object",
      "required": [
        "companyId"
      ],
      "properties": {
        "adCampaignRestriction": {
          "description": "restrictions",
          "allowEmptyValue": false,
          "$ref": "#/definitions/SimpleWhiteBlackRestrictionDto"
        },
        "approvalGoal": {
          "type": "number",
          "format": "double",
          "description": "approval goal",
          "allowEmptyValue": false
        },
        "blackListMode": {
          "type": "boolean",
          "example": false,
          "description": "black list mode",
          "allowEmptyValue": false
        },
        "bsf": {
          "description": "BSF",
          "allowEmptyValue": false,
          "$ref": "#/definitions/BsfDto"
        },
        "budget": {
          "description": "budget",
          "allowEmptyValue": false,
          "$ref": "#/definitions/LifetimeBudgetDto"
        },
        "campaignType": {
          "type": "string",
          "description": "campaign type",
          "allowEmptyValue": false,
          "enum": [
            "NETWORK",
            "DIRECT"
          ]
        },
        "clientCostCPM": {
          "type": "number",
          "format": "double",
          "description": "client cost CPM",
          "allowEmptyValue": false
        },
        "companyId": {
          "description": "Company id - please turn to support in order to retrieve it",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "cpmPerPublisher": {
          "type": "object",
          "description": "CPM per publisher",
          "allowEmptyValue": false,
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        },
        "endDate": {
          "type": "integer",
          "format": "int64",
          "description": "end date",
          "allowEmptyValue": false
        },
        "entry": {
          "description": "adCampaign entry",
          "allowEmptyValue": false,
          "$ref": "#/definitions/AdCampaignEntryDto"
        },
        "hidden": {
          "type": "boolean",
          "example": false,
          "description": "is hidden",
          "allowEmptyValue": false
        },
        "id": {
          "description": "id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "mediaType": {
          "type": "string",
          "description": "media type",
          "allowEmptyValue": false,
          "enum": [
            "ALL",
            "MOBILE",
            "DESKTOP"
          ]
        },
        "minPlayerWidth": {
          "type": "integer",
          "format": "int32",
          "description": "player width",
          "allowEmptyValue": false
        },
        "modifierId": {
          "description": "Modifier id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "overdelivery": {
          "type": "boolean",
          "example": false,
          "description": "over delivery",
          "allowEmptyValue": false
        },
        "ownerId": {
          "description": "owner Id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "parentCompanyId": {
          "description": "Parent company id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "performance": {
          "description": "Performance",
          "allowEmptyValue": false,
          "$ref": "#/definitions/AdCampaignPerformanceDto"
        },
        "random": {
          "type": "boolean",
          "example": false,
          "description": "random",
          "allowEmptyValue": false
        },
        "readOnly": {
          "type": "boolean",
          "example": false,
          "description": "read only",
          "allowEmptyValue": false
        },
        "startDate": {
          "type": "integer",
          "format": "int64",
          "description": "start date",
          "allowEmptyValue": false
        },
        "supportOpenApi": {
          "type": "boolean",
          "example": false,
          "description": "supports open API",
          "allowEmptyValue": false
        },
        "supportS2SCall": {
          "type": "boolean",
          "example": false,
          "description": "supports S2S calls",
          "allowEmptyValue": false
        },
        "targeting": {
          "description": "campaign targeting",
          "allowEmptyValue": false,
          "$ref": "#/definitions/AdCampaignTargetingDto"
        },
        "timeZoneId": {
          "type": "string",
          "description": "time zone",
          "allowEmptyValue": false
        },
        "vastTagIds": {
          "type": "array",
          "description": "vast tags ids",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/ObjectId"
          }
        },
        "videoIds": {
          "type": "array",
          "description": "video ids",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/ObjectId"
          }
        }
      },
      "title": "AdCampaignDto",
      "description": "AdCampaign"
    },
    "AdCampaignEntryDto": {
      "type": "object",
      "required": [
        "name",
        "url",
        "vendor"
      ],
      "properties": {
        "adEngineType": {
          "type": "string",
          "description": "adEngine Type",
          "allowEmptyValue": false,
          "enum": [
            "VAST",
            "IMA",
            "VMAP",
            "YUME",
            "VIDEO",
            "PREBID"
          ]
        },
        "adName": {
          "type": "string",
          "description": "Ad name",
          "allowEmptyValue": false
        },
        "allowMultiburn": {
          "type": "boolean",
          "example": false,
          "description": "Allow multiburn",
          "allowEmptyValue": false
        },
        "cpm": {
          "type": "string",
          "description": "Expected CPM",
          "allowEmptyValue": false
        },
        "enabled": {
          "type": "boolean",
          "example": false,
          "description": "Enabled",
          "allowEmptyValue": false
        },
        "group": {
          "type": "string",
          "description": "Sync group name",
          "allowEmptyValue": false
        },
        "impTracker": {
          "type": "string",
          "description": "Impression Tracker",
          "allowEmptyValue": false
        },
        "name": {
          "type": "string",
          "description": "AdCampaign name",
          "allowEmptyValue": false
        },
        "parseLogic": {
          "type": "string",
          "description": "Parse logic",
          "allowEmptyValue": false,
          "enum": [
            "BRIGHTROLL",
            "BRIGHTCOVE",
            "COLLECTIVE",
            "ADAP_TV",
            "SPOTXCHANGE"
          ]
        },
        "priorityBoost": {
          "type": "number",
          "format": "double",
          "description": "Priority boost",
          "allowEmptyValue": false
        },
        "slot": {
          "description": "Ad slot",
          "allowEmptyValue": false,
          "$ref": "#/definitions/AdSlotDto"
        },
        "strictSiteCheck": {
          "type": "boolean",
          "example": false,
          "description": "Strict site check",
          "allowEmptyValue": false
        },
        "type": {
          "type": "string",
          "description": "AdType",
          "allowEmptyValue": false,
          "enum": [
            "ALL",
            "PREROLL",
            "MIDROLL",
            "OVERLAY",
            "BUMPER",
            "PROMO",
            "POSTROLL"
          ]
        },
        "url": {
          "type": "string",
          "description": "URL",
          "allowEmptyValue": false
        },
        "useInlinePlayer": {
          "type": "boolean",
          "example": false,
          "description": "Use inline player",
          "allowEmptyValue": false
        },
        "usesShim": {
          "type": "boolean",
          "example": false,
          "description": "Uses shim",
          "allowEmptyValue": false
        },
        "vendor": {
          "description": "Ad Vendor id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        }
      },
      "title": "AdCampaignEntryDto"
    },
    "AdCampaignPerformanceDto": {
      "type": "object",
      "properties": {
        "byPublisher": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          }
        },
        "deliveredToday": {
          "type": "integer",
          "format": "int64"
        },
        "deliveredTotal": {
          "type": "integer",
          "format": "int64"
        },
        "modificationDate": {
          "type": "integer",
          "format": "int64"
        },
        "startRatioToday": {
          "type": "number",
          "format": "double"
        },
        "startRatioTotal": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "AdCampaignPerformanceDto"
    },
    "AdCampaignTargetingDto": {
      "type": "object",
      "properties": {
        "geoTarget": {
          "$ref": "#/definitions/GeoTargetDto"
        },
        "matchOnlyOwnContent": {
          "type": "boolean"
        },
        "siteTargets": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SiteTargetDto"
          }
        },
        "targetCategories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "whiteListGeoTarget": {
          "type": "boolean"
        },
        "whiteListSiteTarget": {
          "type": "boolean"
        }
      },
      "title": "AdCampaignTargetingDto"
    },
    "AdCompanionDto": {
      "type": "object",
      "properties": {
        "failover": {
          "type": "string"
        },
        "failoverOnStart": {
          "type": "boolean"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "keepCompanion": {
          "type": "boolean"
        },
        "parent": {
          "type": "string"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AdCompanionDto"
    },
    "AdServerEntryDto": {
      "type": "object",
      "properties": {
        "adName": {
          "type": "string"
        },
        "allowMultiburn": {
          "type": "boolean"
        },
        "cpm": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "group": {
          "type": "string"
        },
        "impTracker": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "parseLogic": {
          "type": "string",
          "enum": [
            "BRIGHTROLL",
            "BRIGHTCOVE",
            "COLLECTIVE",
            "ADAP_TV",
            "SPOTXCHANGE"
          ]
        },
        "priorityBoost": {
          "type": "number",
          "format": "double"
        },
        "slot": {
          "$ref": "#/definitions/AdSlotDto"
        },
        "strictSiteCheck": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "enum": [
            "ALL",
            "PREROLL",
            "MIDROLL",
            "OVERLAY",
            "BUMPER",
            "PROMO",
            "POSTROLL"
          ]
        },
        "url": {
          "type": "string"
        },
        "useInlinePlayer": {
          "type": "boolean"
        },
        "usesShim": {
          "type": "boolean"
        },
        "vendor": {
          "$ref": "#/definitions/ObjectId"
        }
      },
      "title": "AdServerEntryDto"
    },
    "AdSetDto": {
      "type": "object",
      "required": [
        "companyId"
      ],
      "properties": {
        "adSetEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdSetEntryDto"
          }
        },
        "adSetRestriction": {
          "$ref": "#/definitions/SimpleWhiteBlackRestrictionDto"
        },
        "associatedCompanies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssociatedCompanyDto"
          }
        },
        "cancelOverdelivery": {
          "type": "boolean"
        },
        "companyId": {
          "description": "Company id - please turn to support in order to retrieve it",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "creationDate": {
          "type": "integer",
          "format": "int64"
        },
        "customAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "deleted": {
          "type": "boolean"
        },
        "directCampaignsOnly": {
          "type": "boolean"
        },
        "evenlyPacing": {
          "type": "boolean"
        },
        "hidden": {
          "type": "boolean"
        },
        "id": {
          "$ref": "#/definitions/ObjectId"
        },
        "modificationDate": {
          "type": "integer",
          "format": "int64"
        },
        "modifierId": {
          "description": "Modifier id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "name": {
          "type": "string"
        },
        "origin": {
          "type": "string",
          "enum": [
            "MANUALLY",
            "AUTO",
            "SYSTEM"
          ]
        },
        "ownerId": {
          "description": "Owner id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "parentCompanyId": {
          "description": "Parent company id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "readOnly": {
          "type": "boolean"
        },
        "restriction": {
          "$ref": "#/definitions/SimpleWhiteBlackRestrictionDto"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        },
        "workflowType": {
          "type": "string",
          "enum": [
            "DEFAULT",
            "COMMERCIALIZE",
            "BE_ON",
            "LOWLANDER"
          ]
        }
      },
      "title": "AdSetDto",
      "description": "AdSet"
    },
    "AdSetEntryDto": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "$ref": "#/definitions/ObjectId"
        },
        "priorityBoost": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "AdSetEntryDto"
    },
    "AdSettingsConfigurationDto": {
      "type": "object",
      "properties": {
        "adExperienceIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectId"
          }
        },
        "adSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectId"
          }
        },
        "adStrategy": {
          "type": "string",
          "enum": [
            "ADSET_BASED",
            "CONTENT_BASED"
          ]
        },
        "blockContentOnAdBlocker": {
          "type": "boolean"
        },
        "emptyAdExperienceIdsOverride": {
          "type": "boolean"
        },
        "emptyAdSetsOverride": {
          "type": "boolean"
        },
        "emptyUserAdExperienceIdsOverride": {
          "type": "boolean"
        },
        "fallbackAcid": {
          "$ref": "#/definitions/ObjectId"
        },
        "hardTimeout": {
          "type": "number",
          "format": "double"
        },
        "marketplaceId": {
          "$ref": "#/definitions/ObjectId"
        },
        "maxAdSearchTime": {
          "type": "number",
          "format": "double"
        },
        "maxAdsCount": {
          "type": "integer",
          "format": "int32"
        },
        "maxLinearShowTime": {
          "type": "integer",
          "format": "int32"
        },
        "midrollTiming": {
          "type": "string"
        },
        "nullFallbackAcidOverride": {
          "type": "boolean"
        },
        "nullMarketplaceIdOverride": {
          "type": "boolean"
        },
        "optimizationType": {
          "type": "string",
          "enum": [
            "BASIC",
            "DOMAIN",
            "CONTENT_LEARN",
            "AD_RESPONSE_RATE",
            "AD_SUCCESS_RATE",
            "REQUEST_FILL",
            "RPM",
            "LATENCY",
            "RPM_PER_AD_ATTEMPTS"
          ]
        },
        "overlayTiming": {
          "type": "string"
        },
        "podSize": {
          "type": "integer",
          "format": "int32"
        },
        "prerollInterleave": {
          "type": "integer",
          "format": "int32"
        },
        "softTimeout": {
          "type": "number",
          "format": "double"
        },
        "startTimeout": {
          "type": "number",
          "format": "double"
        },
        "strictSiteCheckForAds": {
          "type": "boolean"
        },
        "useSsai": {
          "type": "boolean"
        },
        "userAdExperienceIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectId"
          }
        }
      },
      "title": "AdSettingsConfigurationDto"
    },
    "AdSettingsDto": {
      "type": "object",
      "properties": {
        "adSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectId"
          }
        },
        "adStrategy": {
          "type": "string",
          "enum": [
            "ADSET_BASED",
            "CONTENT_BASED"
          ]
        },
        "ads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdServerEntryDto"
          }
        },
        "blockContentOnAdBlocker": {
          "type": "boolean"
        },
        "companions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdCompanionDto"
          }
        },
        "domainOptimisation": {
          "type": "boolean"
        },
        "fallbackAcid": {
          "$ref": "#/definitions/ObjectId"
        },
        "hardTimeout": {
          "type": "number",
          "format": "double"
        },
        "maxAdSearchTime": {
          "type": "number",
          "format": "double"
        },
        "maxAdsCount": {
          "type": "integer",
          "format": "int32"
        },
        "maxLinearShowTime": {
          "type": "integer",
          "format": "int32"
        },
        "maxNonShimsFirst": {
          "type": "integer",
          "format": "int32"
        },
        "maxNonShimsRest": {
          "type": "integer",
          "format": "int32"
        },
        "maxShimsFirst": {
          "type": "integer",
          "format": "int32"
        },
        "maxShimsRest": {
          "type": "integer",
          "format": "int32"
        },
        "midrollTiming": {
          "type": "string"
        },
        "optimizationType": {
          "type": "string",
          "enum": [
            "BASIC",
            "DOMAIN",
            "CONTENT_LEARN",
            "AD_RESPONSE_RATE",
            "AD_SUCCESS_RATE",
            "REQUEST_FILL",
            "RPM",
            "LATENCY",
            "RPM_PER_AD_ATTEMPTS"
          ]
        },
        "overlayTiming": {
          "type": "string"
        },
        "podSize": {
          "type": "integer",
          "format": "int32"
        },
        "prerollInterleave": {
          "type": "integer",
          "format": "int32"
        },
        "softTimeout": {
          "type": "number",
          "format": "double"
        },
        "startTimeout": {
          "type": "number",
          "format": "double"
        },
        "strictSiteCheckForAds": {
          "type": "boolean"
        },
        "useSsai": {
          "type": "boolean"
        }
      },
      "title": "AdSettingsDto"
    },
    "AdSlotDto": {
      "type": "object",
      "required": [
        "delay",
        "height",
        "maxShowTime",
        "width"
      ],
      "properties": {
        "delay": {
          "type": "integer",
          "format": "int32",
          "description": "AdSlot delay, min(0)",
          "allowEmptyValue": false
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "AdSlot height, min(1)",
          "allowEmptyValue": false
        },
        "maxShowTime": {
          "type": "integer",
          "format": "int32",
          "description": "AdSlot maxShowTime, min(0)",
          "allowEmptyValue": false
        },
        "position": {
          "type": "string",
          "description": "AdSlot position, default('FULL')",
          "allowEmptyValue": false,
          "enum": [
            "TOP",
            "BOTTOM",
            "LEFT",
            "RIGHT",
            "FULL"
          ]
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "AdSlot width, min(1)",
          "allowEmptyValue": false
        }
      },
      "title": "AdSlotDto"
    },
    "AddonDto": {
      "type": "object",
      "properties": {
        "addonType": {
          "type": "string",
          "enum": [
            "BEFORE",
            "AFTER"
          ]
        },
        "script": {
          "type": "string"
        }
      },
      "title": "AddonDto"
    },
    "AgeRangeDto": {
      "type": "object",
      "properties": {
        "includeMax": {
          "type": "boolean"
        },
        "includeMin": {
          "type": "boolean"
        },
        "maxValue": {
          "type": "integer",
          "format": "int32"
        },
        "minValue": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AgeRangeDto"
    },
    "AnimatedThumbnailDto": {
      "type": "object",
      "properties": {
        "format": {
          "type": "string"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "type": "string"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AnimatedThumbnailDto"
    },
    "ApiThumbnailDto": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "type": "string"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ApiThumbnailDto"
    },
    "AssociatedCompanyDto": {
      "type": "object",
      "properties": {
        "companyId": {
          "$ref": "#/definitions/ObjectId"
        },
        "permissionsOverride": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionOverrideDto"
          }
        }
      },
      "title": "AssociatedCompanyDto"
    },
    "BsfDto": {
      "type": "object",
      "properties": {
        "brandSafetyLevel": {
          "$ref": "#/definitions/StringBoundaryDto"
        },
        "fraudBoundaries": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DoubleBoundaryDto"
          }
        }
      },
      "title": "BsfDto"
    },
    "BudgetDto": {
      "type": "object",
      "properties": {
        "impressions": {
          "type": "integer",
          "format": "int64"
        },
        "pacing": {
          "type": "string",
          "enum": [
            "EVENLY",
            "GREEDY"
          ]
        }
      },
      "title": "BudgetDto"
    },
    "CarmotMetadataDto": {
      "type": "object",
      "properties": {
        "carmotId": {
          "type": "string"
        },
        "processingRequestId": {
          "type": "string"
        },
        "sourceUrl": {
          "type": "string"
        }
      },
      "title": "CarmotMetadataDto"
    },
    "ClassificationDto": {
      "type": "object",
      "properties": {
        "concepts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConceptDto"
          }
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityDto"
          }
        },
        "stories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StoryDto"
          }
        },
        "taxonomyCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxonomyCategoryDto"
          }
        },
        "text": {
          "type": "string"
        }
      },
      "title": "ClassificationDto"
    },
    "ClientVideoDto": {
      "type": "object",
      "properties": {
        "audioUrl": {
          "type": "string"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "company": {
          "type": "string"
        },
        "companyId": {
          "$ref": "#/definitions/ObjectId"
        },
        "copyright": {
          "type": "string"
        },
        "creationDate": {
          "type": "integer",
          "format": "int64"
        },
        "customAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "deviceRestriction": {
          "$ref": "#/definitions/DeviceRestrictionDto"
        },
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "embedPlayerCode": {
          "type": "string"
        },
        "endDate": {
          "type": "integer",
          "format": "int64"
        },
        "geoRestriction": {
          "$ref": "#/definitions/GeoRestrictionDto"
        },
        "guid": {
          "type": "string"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "iabCategories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "$ref": "#/definitions/ObjectId"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "media": {
          "$ref": "#/definitions/MediaDto"
        },
        "mimeType": {
          "type": "string"
        },
        "modificationDate": {
          "type": "integer",
          "format": "int64"
        },
        "monthViews": {
          "type": "integer",
          "format": "int64"
        },
        "numberOfVideos": {
          "type": "integer",
          "format": "int64"
        },
        "originalVideoUrl": {
          "type": "string"
        },
        "plays": {
          "type": "integer",
          "format": "int64"
        },
        "publishDate": {
          "type": "integer",
          "format": "int64"
        },
        "rating": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "shortDescription": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "startDate": {
          "type": "integer",
          "format": "int64"
        },
        "subtitles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubtitleDto"
          }
        },
        "thumbnail": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "totalViews": {
          "type": "integer",
          "format": "int64"
        },
        "transcript": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "videoViews": {
          "type": "integer",
          "format": "int64"
        },
        "vlsId": {
          "type": "string"
        },
        "weekViews": {
          "type": "integer",
          "format": "int64"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ClientVideoDto"
    },
    "CommonRatingDto": {
      "type": "object",
      "properties": {
        "descriptors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "D",
              "L",
              "S",
              "V",
              "FV",
              "AR",
              "ND"
            ]
          }
        },
        "minAge": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string",
          "enum": [
            "Y",
            "Y7",
            "G",
            "PG",
            "PG14",
            "MA",
            "NC17",
            "NR"
          ]
        }
      },
      "title": "CommonRatingDto"
    },
    "CompanyDto": {
      "type": "object",
      "required": [
        "companyId",
        "name",
        "roleId"
      ],
      "properties": {
        "callbackUrl": {
          "type": "string",
          "description": "Callback URL",
          "allowEmptyValue": false
        },
        "companyGroupNames": {
          "type": "array",
          "description": "Company group names",
          "allowEmptyValue": false,
          "items": {
            "type": "string"
          }
        },
        "companyGroups": {
          "type": "array",
          "description": "Company groups",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/ObjectId"
          }
        },
        "companyId": {
          "description": "Company id - please turn to support in order to retrieve it",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "contentVisibility": {
          "description": "Content visibility",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ContentVisibilityDto"
        },
        "creationDate": {
          "type": "integer",
          "format": "int64",
          "description": "Company creation date",
          "allowEmptyValue": false
        },
        "defaultEncodingProfileId": {
          "description": "Default encoding profile id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "defaultPlayerId": {
          "description": "Default player id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "defaultPlayerTemplateId": {
          "description": "Default player template id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "description": {
          "type": "string",
          "description": "Description of the company",
          "allowEmptyValue": false
        },
        "facetSettings": {
          "description": "Facet settings",
          "allowEmptyValue": false,
          "$ref": "#/definitions/FacetSettingsDto"
        },
        "id": {
          "description": "id - please turn to support in order to retrieve it",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "managerId": {
          "description": "Manager id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "metadata": {
          "type": "object",
          "description": "Company metadata",
          "allowEmptyValue": false,
          "additionalProperties": {
            "type": "string"
          }
        },
        "modificationDate": {
          "type": "integer",
          "format": "int64",
          "description": "Company modification date",
          "allowEmptyValue": false
        },
        "modifierId": {
          "description": "Modifier id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "name": {
          "type": "string",
          "description": "The name of the company",
          "allowEmptyValue": false
        },
        "ownerId": {
          "description": "Owner id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "parentCompanyId": {
          "description": "Parent company id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "playbackMode": {
          "type": "string",
          "description": "Playback mode",
          "allowEmptyValue": false,
          "enum": [
            "DEFAULT",
            "ENCRYPTED_HLS"
          ]
        },
        "primaryCompanyGroup": {
          "description": "Primary company group",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "primaryCompanyGroupName": {
          "type": "string",
          "description": "Primary company group name",
          "allowEmptyValue": false
        },
        "roleId": {
          "description": "Role id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "vlsSettings": {
          "description": "Vls settings",
          "allowEmptyValue": false,
          "$ref": "#/definitions/VlsSettingsDto"
        }
      },
      "title": "CompanyDto",
      "description": "Company data"
    },
    "CompanyExportLibraryDto": {
      "type": "object",
      "required": [
        "companyId"
      ],
      "properties": {
        "ageRatings": {
          "type": "array",
          "description": "KIDS - Kids, TWEENS - Tweens, TEENS - Teens, ADULTS - Adults, SENIORS - Seniors, NONE_SPECIFIED - None specified",
          "allowEmptyValue": false,
          "items": {
            "type": "string",
            "enum": [
              "KIDS",
              "TWEENS",
              "TEENS",
              "ADULTS",
              "SENIORS",
              "NONE_SPECIFIED"
            ]
          }
        },
        "approvalState": {
          "type": "array",
          "description": "Default, Pending Approval, Approved",
          "allowEmptyValue": false,
          "items": {
            "type": "string",
            "enum": [
              "DEFAULT",
              "PENDING_APPROVAL",
              "APPROVED"
            ]
          }
        },
        "availability": {
          "type": "array",
          "description": "Available, Upcoming, Past",
          "allowEmptyValue": false,
          "items": {
            "type": "string",
            "enum": [
              "AVAILABLE",
              "UPCOMING",
              "PAST"
            ]
          }
        },
        "categories": {
          "type": "array",
          "description": "Video categories",
          "allowEmptyValue": false,
          "items": {
            "type": "string"
          }
        },
        "companyId": {
          "description": "Company id - please turn to support in order to retrieve it",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "contentDescriptors": {
          "type": "array",
          "description": "D - Suggestive Dialogue, L - Coarse Language, S - Sexual Content, V - Violence, FV - Fantasy Violence, AR - Age Restricted, ND - No Descriptors",
          "allowEmptyValue": false,
          "items": {
            "type": "string",
            "enum": [
              "D",
              "L",
              "S",
              "V",
              "FV",
              "AR",
              "ND"
            ]
          }
        },
        "contentRatings": {
          "type": "array",
          "description": "Y - For All Children, Y-7 - Age 7 And Above, G - For All Ages, PG - Age 10 And Above, PG-14 - Age 14 And Above, MA - Age 17 And Above, NC17 - Adults Only, NR Not Rated",
          "allowEmptyValue": false,
          "items": {
            "type": "string",
            "enum": [
              "Y",
              "Y7",
              "G",
              "PG",
              "PG14",
              "MA",
              "NC17",
              "NR"
            ]
          }
        },
        "exportedLibraryUrl": {
          "type": "string",
          "description": "Cdn url of the exported video library.",
          "allowEmptyValue": false
        },
        "geoRestriction": {
          "type": "array",
          "description": "Video geo restriction",
          "allowEmptyValue": false,
          "items": {
            "type": "string"
          }
        },
        "id": {
          "description": "Id of the exported video library.",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "includeArchived": {
          "type": "boolean"
        },
        "includeNotArchived": {
          "type": "boolean"
        },
        "languages": {
          "type": "array",
          "description": "Video languages",
          "allowEmptyValue": false,
          "items": {
            "type": "string"
          }
        },
        "lastEvaluationDate": {
          "type": "integer",
          "format": "int64",
          "description": "Last evaluation date of the exported video library.",
          "allowEmptyValue": false
        },
        "maxPrice": {
          "type": "number",
          "format": "double",
          "description": "Max video price",
          "allowEmptyValue": false
        },
        "minPrice": {
          "type": "number",
          "format": "double",
          "description": "Min video price",
          "allowEmptyValue": false
        },
        "moderationStatus": {
          "type": "array",
          "description": "Blank, Distributed, Required, Rejected, Approved",
          "allowEmptyValue": false,
          "items": {
            "type": "string",
            "enum": [
              "BLANK",
              "DISTRIBUTED",
              "REQUIRED",
              "REJECTED",
              "APPROVED"
            ]
          }
        },
        "modifierId": {
          "description": "Modifier id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "name": {
          "type": "string",
          "description": "Name of the exported video library.",
          "allowEmptyValue": false
        },
        "originTypes": {
          "type": "array",
          "description": "Manually, Auto, System",
          "allowEmptyValue": false,
          "items": {
            "type": "string",
            "enum": [
              "MANUALLY",
              "AUTO",
              "SYSTEM"
            ]
          }
        },
        "ownerId": {
          "description": "Owner id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "parentCompanyId": {
          "description": "Parent company id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "rawQuery": {
          "type": "string",
          "description": "Video search raw query",
          "allowEmptyValue": false
        },
        "sentToReencode": {
          "type": "array",
          "description": "Auto, Manually",
          "allowEmptyValue": false,
          "items": {
            "type": "string",
            "enum": [
              "AUTO",
              "MANUALLY"
            ]
          }
        },
        "sortOrder": {
          "type": "string",
          "description": "Sort order of the exported video library. Default value - RELEVANCE",
          "allowEmptyValue": false,
          "enum": [
            "RELEVANCE",
            "MODIFIED",
            "CREATED",
            "PUBLISHED",
            "CURATION_DATE"
          ]
        },
        "uploadState": {
          "type": "array",
          "description": "Pending, Encoding, Propagating, Ready, Failed",
          "allowEmptyValue": false,
          "items": {
            "type": "string",
            "enum": [
              "PENDING",
              "ENCODING",
              "PROPAGATING",
              "READY",
              "FAILED"
            ]
          }
        }
      },
      "title": "CompanyExportLibraryDto"
    },
    "ConceptDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "relevance": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "ConceptDto"
    },
    "ContentVisibilityDto": {
      "type": "object",
      "properties": {
        "filter": {
          "type": "string"
        },
        "noVideosIfFirstRestricted": {
          "type": "boolean"
        },
        "playerTemplatesFilter": {
          "type": "string"
        },
        "restrictionMode": {
          "type": "string",
          "enum": [
            "ALL",
            "ONLY_WHITE_LABEL_CONTENT",
            "ONLY_MY_CONTENT"
          ]
        },
        "sharePlayerTemplatesWithAffiliate": {
          "type": "boolean"
        }
      },
      "title": "ContentVisibilityDto"
    },
    "CuePointDto": {
      "type": "object",
      "properties": {
        "time": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "CuePointDto"
    },
    "DeviceRestrictionDto": {
      "type": "object",
      "properties": {
        "blackList": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "COMPUTER",
              "MOBILE",
              "TABLET",
              "PHABLET",
              "CONNECTED_DEVICE",
              "UNKNOWN"
            ]
          }
        },
        "blackListMode": {
          "type": "boolean"
        },
        "whiteList": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "COMPUTER",
              "MOBILE",
              "TABLET",
              "PHABLET",
              "CONNECTED_DEVICE",
              "UNKNOWN"
            ]
          }
        }
      },
      "title": "DeviceRestrictionDto"
    },
    "DiscountDto": {
      "type": "object",
      "properties": {
        "discountCpm": {
          "type": "number",
          "format": "double"
        },
        "targetCompanyId": {
          "$ref": "#/definitions/ObjectId"
        }
      },
      "title": "DiscountDto"
    },
    "DoubleBoundaryDto": {
      "type": "object",
      "properties": {
        "operation": {
          "type": "string",
          "enum": [
            "EQ",
            "LESS",
            "LESS_OR_EQ",
            "GREATER",
            "GREATER_OR_EQ"
          ]
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "DoubleBoundaryDto"
    },
    "EncodedVariantDto": {
      "type": "object",
      "properties": {
        "advancedQuality": {
          "type": "boolean"
        },
        "aspectRatio": {
          "type": "number",
          "format": "double"
        },
        "audioBitRate": {
          "type": "integer",
          "format": "int32"
        },
        "audioQuality": {
          "type": "integer",
          "format": "int32"
        },
        "cdnProvider": {
          "type": "string",
          "enum": [
            "EDGECAST",
            "UPLYNK",
            "GO90",
            "UNKNOWN"
          ]
        },
        "crop": {
          "type": "boolean"
        },
        "externalId": {
          "type": "string"
        },
        "file": {
          "type": "string"
        },
        "fileSizeBytes": {
          "type": "integer",
          "format": "int64"
        },
        "frameStep": {
          "type": "boolean"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "maxFrameRate": {
          "type": "number",
          "format": "double"
        },
        "modificationDate": {
          "type": "integer",
          "format": "int64"
        },
        "mono": {
          "type": "boolean"
        },
        "provider": {
          "type": "string",
          "enum": [
            "ZENCODER",
            "ENCODING_COM",
            "UPLYNK",
            "ENVRMNT",
            "UNKNOWN"
          ]
        },
        "renditionType": {
          "type": "string"
        },
        "tokenEnabled": {
          "type": "boolean"
        },
        "videoBitRate": {
          "type": "integer",
          "format": "int32"
        },
        "videoQuality": {
          "type": "integer",
          "format": "int32"
        },
        "videoUrl": {
          "type": "string"
        },
        "watermark": {
          "$ref": "#/definitions/EncodingWatermarkDto"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "EncodedVariantDto"
    },
    "EncodingWatermarkDto": {
      "type": "object",
      "properties": {
        "file": {
          "type": "string"
        },
        "fileVersion": {
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "$ref": "#/definitions/ObjectId"
        },
        "opacity": {
          "type": "number",
          "format": "double"
        },
        "originFileName": {
          "type": "string"
        },
        "originHeight": {
          "type": "integer",
          "format": "int32"
        },
        "originWidth": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        },
        "xCoord": {
          "type": "string"
        },
        "yCoord": {
          "type": "string"
        }
      },
      "title": "EncodingWatermarkDto"
    },
    "EntityDto": {
      "type": "object",
      "properties": {
        "freebaseId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "relegenceId": {
          "type": "integer",
          "format": "int32"
        },
        "relevance": {
          "type": "number",
          "format": "double"
        },
        "subTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        }
      },
      "title": "EntityDto"
    },
    "Error": {
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "Error"
    },
    "EventDto": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "enum": [
            "NEWS",
            "GENERAL",
            "HOLIDAY",
            "SPORTS",
            "TECH",
            "HEALTH",
            "AUTOS",
            "ENTERTAINMENT",
            "FOOD",
            "STYLE"
          ]
        },
        "endDate": {
          "type": "integer",
          "format": "int64"
        },
        "startDate": {
          "type": "integer",
          "format": "int64"
        },
        "timeZoneId": {
          "type": "string"
        }
      },
      "title": "EventDto"
    },
    "ExtendedGeoTargetingDetailDto": {
      "type": "object",
      "properties": {
        "cityCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "countryCode": {
          "type": "string"
        },
        "languageCode": {
          "type": "string"
        },
        "regionCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "ExtendedGeoTargetingDetailDto"
    },
    "ExtraConfigDto": {
      "type": "object",
      "properties": {
        "extraId": {
          "$ref": "#/definitions/ObjectId"
        },
        "name": {
          "type": "string"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtraPropertyDto"
          }
        },
        "region": {
          "$ref": "#/definitions/RectangleDto"
        }
      },
      "title": "ExtraConfigDto"
    },
    "ExtraPropertyDto": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "ExtraPropertyDto"
    },
    "FacetSettingsDto": {
      "type": "object",
      "properties": {
        "facetDefaultValues": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "FacetSettingsDto"
    },
    "FeedDto": {
      "type": "object",
      "required": [
        "companyId"
      ],
      "properties": {
        "companyId": {
          "description": "Company id - please turn to support in order to retrieve it",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "creationDate": {
          "type": "integer",
          "format": "int64"
        },
        "customAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "deleted": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "encodingProfileId": {
          "$ref": "#/definitions/ObjectId"
        },
        "feedIndex": {
          "type": "boolean"
        },
        "feedType": {
          "type": "string",
          "enum": [
            "MRSS",
            "AUDIO",
            "MRSS_OVER_FTP",
            "FTP",
            "YOUTUBE",
            "HULU"
          ]
        },
        "hidden": {
          "type": "boolean"
        },
        "iabCategories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "$ref": "#/definitions/ObjectId"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastProcessState": {
          "$ref": "#/definitions/FeedStateDto"
        },
        "lastProductiveProcessState": {
          "$ref": "#/definitions/FeedStateDto"
        },
        "modificationDate": {
          "type": "integer",
          "format": "int64"
        },
        "modifierId": {
          "description": "Modifier id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "name": {
          "type": "string"
        },
        "ownerId": {
          "$ref": "#/definitions/ObjectId"
        },
        "parentCompanyId": {
          "description": "Parent company id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "readOnly": {
          "type": "boolean"
        },
        "selectFrames": {
          "type": "boolean"
        },
        "sellerRuleId": {
          "$ref": "#/definitions/ObjectId"
        },
        "storageType": {
          "type": "string",
          "enum": [
            "ENCODED",
            "EXTERNAL",
            "COPIED"
          ]
        },
        "supportUpdates": {
          "type": "boolean"
        },
        "transcriptEnabled": {
          "type": "boolean"
        },
        "url": {
          "type": "string"
        },
        "videosRequireApproval": {
          "type": "boolean"
        },
        "workflowType": {
          "type": "string",
          "enum": [
            "DEFAULT",
            "COMMERCIALIZE",
            "BE_ON",
            "LOWLANDER"
          ]
        }
      },
      "title": "FeedDto"
    },
    "FeedStateDto": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "format": "int64"
        },
        "failedVideos": {
          "type": "integer",
          "format": "int32"
        },
        "newVideos": {
          "type": "integer",
          "format": "int32"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "FAILURE"
          ]
        },
        "totalVideos": {
          "type": "integer",
          "format": "int32"
        },
        "updatedVideos": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "FeedStateDto"
    },
    "GeoRestrictionDto": {
      "type": "object",
      "properties": {
        "blackList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "blackListMode": {
          "type": "boolean"
        },
        "whiteList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "GeoRestrictionDto"
    },
    "GeoTargetDto": {
      "type": "object",
      "properties": {
        "countries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "geoLocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtendedGeoTargetingDetailDto"
          }
        }
      },
      "title": "GeoTargetDto"
    },
    "Id": {
      "type": "object",
      "title": "Id"
    },
    "LanguageDto": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "code4Letters": {
          "type": "string"
        },
        "mostUsed": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "LanguageDto"
    },
    "LifetimeBudgetDto": {
      "type": "object",
      "properties": {
        "dailyBudget": {
          "$ref": "#/definitions/BudgetDto"
        },
        "impressions": {
          "type": "integer",
          "format": "int64"
        },
        "individualPerPublisher": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          }
        },
        "pacing": {
          "type": "string",
          "enum": [
            "EVENLY",
            "GREEDY"
          ]
        },
        "payableImpressions": {
          "type": "integer",
          "format": "int64"
        },
        "perPublisher": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "LifetimeBudgetDto"
    },
    "LogoDto": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "region": {
          "$ref": "#/definitions/RectangleDto"
        },
        "url": {
          "type": "string"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "LogoDto"
    },
    "LookAndFeelDto": {
      "type": "object",
      "properties": {
        "afterVideosUI": {
          "type": "string",
          "enum": [
            "NEXT",
            "CAROUSEL",
            "NONE"
          ]
        },
        "autoplayInView": {
          "type": "integer",
          "format": "int32"
        },
        "backgroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "backgroundFill": {
          "type": "boolean"
        },
        "backgroundSkinId": {
          "$ref": "#/definitions/ObjectId"
        },
        "backgroundSkinLocation": {
          "$ref": "#/definitions/RectangleDto"
        },
        "bevelHighlightColor": {
          "type": "integer",
          "format": "int32"
        },
        "bevelShadowColor": {
          "type": "integer",
          "format": "int32"
        },
        "bevelSize": {
          "type": "integer",
          "format": "int32"
        },
        "bevelStrength": {
          "type": "number",
          "format": "double"
        },
        "captionsTimelinePreview": {
          "type": "boolean"
        },
        "controlsAutoPosition": {
          "type": "boolean"
        },
        "controlsBackgroundAlpha": {
          "type": "number",
          "format": "double"
        },
        "controlsBackgroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "controlsChromeless": {
          "type": "boolean"
        },
        "controlsLogoClickUrl": {
          "type": "string"
        },
        "controlsLogoUrl": {
          "type": "string"
        },
        "controlsSizings": {
          "type": "string"
        },
        "controlsSkinId": {
          "$ref": "#/definitions/ObjectId"
        },
        "controlsSkinLocation": {
          "$ref": "#/definitions/RectangleDto"
        },
        "coveringsSkinId": {
          "$ref": "#/definitions/ObjectId"
        },
        "coveringsSkinLocation": {
          "$ref": "#/definitions/RectangleDto"
        },
        "fullscreenOnUnmute": {
          "type": "boolean"
        },
        "initialVolume": {
          "type": "number",
          "format": "double"
        },
        "initialization": {
          "type": "string",
          "enum": [
            "AUTOPLAY",
            "AUTOPLAY_WHEN_IN_VIEW",
            "AUTOPLAY_AD_ONLY",
            "MOUSEOVER",
            "CLICK",
            "NONE"
          ]
        },
        "knockOutVideoRegion": {
          "type": "boolean"
        },
        "mobileAutoplayWifiOnly": {
          "type": "boolean"
        },
        "mobileInit": {
          "type": "string",
          "enum": [
            "AS_DESKTOP",
            "AUTOPLAY",
            "AUTOPLAY_WHEN_IN_VIEW",
            "AUTOPLAY_AD_ONLY",
            "CLICK"
          ]
        },
        "outerCornerSize": {
          "type": "integer",
          "format": "int32"
        },
        "placeholderPosterLabelConfiguration": {
          "$ref": "#/definitions/PlaceholderPosterLabelConfigurationDto"
        },
        "playerHeight": {
          "type": "integer",
          "format": "int32"
        },
        "playerWidth": {
          "type": "integer",
          "format": "int32"
        },
        "previewPoster": {
          "type": "string",
          "enum": [
            "IMAGE",
            "ANIMATED"
          ]
        },
        "responsive": {
          "type": "boolean"
        },
        "scrubBarSkinId": {
          "$ref": "#/definitions/ObjectId"
        },
        "showLogo": {
          "type": "boolean"
        },
        "showVideoTitle": {
          "type": "string",
          "enum": [
            "STARTING_FIRST",
            "STARTING_SECOND",
            "NEVER"
          ]
        },
        "shuffleVideos": {
          "type": "boolean"
        },
        "sound": {
          "type": "string",
          "enum": [
            "MUTED",
            "NORMAL",
            "MOUSEOVER",
            "MOUSEOVER_OFF",
            "NONE"
          ]
        },
        "subtitleSettings": {
          "$ref": "#/definitions/SubtitleSettingsDto"
        },
        "surroundSkinId": {
          "$ref": "#/definitions/ObjectId"
        },
        "surroundSkinLocation": {
          "$ref": "#/definitions/RectangleDto"
        },
        "unmuteUx": {
          "type": "string",
          "enum": [
            "UNMUTE_BUTTON",
            "UNMUTE_BUTTON_WITH_CONTROLS",
            "DISABLED"
          ]
        },
        "use3D": {
          "type": "boolean"
        },
        "videoCornerSize": {
          "type": "integer",
          "format": "int32"
        },
        "videoLocation": {
          "$ref": "#/definitions/RectangleDto"
        }
      },
      "title": "LookAndFeelDto"
    },
    "MediaDto": {
      "type": "object",
      "properties": {
        "condition": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "emotion": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "specialties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tag": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "MediaDto"
    },
    "NamedEntityWithExclusionsDto": {
      "type": "object",
      "properties": {
        "excluded": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimpleNamedEntityDto"
          }
        },
        "id": {
          "$ref": "#/definitions/ObjectId"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "NamedEntityWithExclusionsDto"
    },
    "O2Failure": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "request": {
          "type": "string"
        }
      },
      "title": "O2Failure",
      "xml": {
        "name": "o2Failure",
        "attribute": false,
        "wrapped": false
      }
    },
    "ObjectId": {
      "type": "object",
      "properties": {
        "counter": {
          "type": "integer",
          "format": "int32"
        },
        "date": {
          "type": "integer",
          "format": "int64"
        },
        "machineIdentifier": {
          "type": "integer",
          "format": "int32"
        },
        "processIdentifier": {
          "type": "integer",
          "format": "int32"
        },
        "time": {
          "type": "integer",
          "format": "int64"
        },
        "timeSecond": {
          "type": "integer",
          "format": "int32"
        },
        "timestamp": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ObjectId"
    },
    "OperationResultOfAdCampaignDto": {
      "type": "object",
      "properties": {
        "data": {
          "xml": {
            "name": "data",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/AdCampaignDto"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "failureCause": {
          "xml": {
            "name": "failureCause",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/O2Failure"
        },
        "numberOfItems": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "scrollId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR",
            "FAIL"
          ]
        },
        "totalNumberOfItems": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "OperationResultOfAdCampaignDto"
    },
    "OperationResultOfCompanyExportLibraryDto": {
      "type": "object",
      "properties": {
        "data": {
          "xml": {
            "name": "data",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/CompanyExportLibraryDto"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "failureCause": {
          "xml": {
            "name": "failureCause",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/O2Failure"
        },
        "numberOfItems": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "scrollId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR",
            "FAIL"
          ]
        },
        "totalNumberOfItems": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "OperationResultOfCompanyExportLibraryDto"
    },
    "OperationResultOfListOfCompanyExportLibraryDto": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "xml": {
            "name": "data",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/CompanyExportLibraryDto"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "failureCause": {
          "xml": {
            "name": "failureCause",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/O2Failure"
        },
        "numberOfItems": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "scrollId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR",
            "FAIL"
          ]
        },
        "totalNumberOfItems": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "OperationResultOfListOfCompanyExportLibraryDto"
    },
    "OperationResultOfListOfFeedDto": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "xml": {
            "name": "data",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/FeedDto"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "failureCause": {
          "xml": {
            "name": "failureCause",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/O2Failure"
        },
        "numberOfItems": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "scrollId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR",
            "FAIL"
          ]
        },
        "totalNumberOfItems": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "OperationResultOfListOfFeedDto"
    },
    "OperationResultOfListOfPageDto": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "xml": {
            "name": "data",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/PageDto"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "failureCause": {
          "xml": {
            "name": "failureCause",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/O2Failure"
        },
        "numberOfItems": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "scrollId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR",
            "FAIL"
          ]
        },
        "totalNumberOfItems": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "OperationResultOfListOfPageDto"
    },
    "OperationResultOfListOfPlayerDto": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "xml": {
            "name": "data",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/PlayerDto"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "failureCause": {
          "xml": {
            "name": "failureCause",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/O2Failure"
        },
        "numberOfItems": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "scrollId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR",
            "FAIL"
          ]
        },
        "totalNumberOfItems": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "OperationResultOfListOfPlayerDto"
    },
    "OperationResultOfListOfPlaylistDto": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "xml": {
            "name": "data",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/PlaylistDto"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "failureCause": {
          "xml": {
            "name": "failureCause",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/O2Failure"
        },
        "numberOfItems": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "scrollId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR",
            "FAIL"
          ]
        },
        "totalNumberOfItems": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "OperationResultOfListOfPlaylistDto"
    },
    "OperationResultOfListOfSellerRuleDto": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "xml": {
            "name": "data",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/SellerRuleDto"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "failureCause": {
          "xml": {
            "name": "failureCause",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/O2Failure"
        },
        "numberOfItems": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "scrollId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR",
            "FAIL"
          ]
        },
        "totalNumberOfItems": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "OperationResultOfListOfSellerRuleDto"
    },
    "OperationResultOfListOfSmartTagDto": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "xml": {
            "name": "data",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/SmartTagDto"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "failureCause": {
          "xml": {
            "name": "failureCause",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/O2Failure"
        },
        "numberOfItems": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "scrollId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR",
            "FAIL"
          ]
        },
        "totalNumberOfItems": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "OperationResultOfListOfSmartTagDto"
    },
    "OperationResultOfListOfUserDto": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "xml": {
            "name": "data",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/UserDto"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "failureCause": {
          "xml": {
            "name": "failureCause",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/O2Failure"
        },
        "numberOfItems": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "scrollId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR",
            "FAIL"
          ]
        },
        "totalNumberOfItems": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "OperationResultOfListOfUserDto"
    },
    "OperationResultOfListOfVideoDto": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "xml": {
            "name": "data",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/VideoDto"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "failureCause": {
          "xml": {
            "name": "failureCause",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/O2Failure"
        },
        "numberOfItems": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "scrollId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR",
            "FAIL"
          ]
        },
        "totalNumberOfItems": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "OperationResultOfListOfVideoDto"
    },
    "OperationResultOfPlaylistDto": {
      "type": "object",
      "properties": {
        "data": {
          "xml": {
            "name": "data",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/PlaylistDto"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "failureCause": {
          "xml": {
            "name": "failureCause",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/O2Failure"
        },
        "numberOfItems": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "scrollId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR",
            "FAIL"
          ]
        },
        "totalNumberOfItems": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "OperationResultOfPlaylistDto"
    },
    "OperationResultOfPlaylistWithVideos": {
      "type": "object",
      "properties": {
        "data": {
          "xml": {
            "name": "data",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/PlaylistWithVideos"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "failureCause": {
          "xml": {
            "name": "failureCause",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/O2Failure"
        },
        "numberOfItems": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "scrollId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR",
            "FAIL"
          ]
        },
        "totalNumberOfItems": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "OperationResultOfPlaylistWithVideos"
    },
    "OperationResultOfSellerRuleDto": {
      "type": "object",
      "properties": {
        "data": {
          "xml": {
            "name": "data",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/SellerRuleDto"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "failureCause": {
          "xml": {
            "name": "failureCause",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/O2Failure"
        },
        "numberOfItems": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "scrollId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR",
            "FAIL"
          ]
        },
        "totalNumberOfItems": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "OperationResultOfSellerRuleDto"
    },
    "OperationResultOfSmartTagDto": {
      "type": "object",
      "properties": {
        "data": {
          "xml": {
            "name": "data",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/SmartTagDto"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "failureCause": {
          "xml": {
            "name": "failureCause",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/O2Failure"
        },
        "numberOfItems": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "scrollId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR",
            "FAIL"
          ]
        },
        "totalNumberOfItems": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "OperationResultOfSmartTagDto"
    },
    "OperationResultOfUserDto": {
      "type": "object",
      "properties": {
        "data": {
          "xml": {
            "name": "data",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/UserDto"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "failureCause": {
          "xml": {
            "name": "failureCause",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/O2Failure"
        },
        "numberOfItems": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "scrollId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR",
            "FAIL"
          ]
        },
        "totalNumberOfItems": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "OperationResultOfUserDto"
    },
    "OperationResultOfVastTagDto": {
      "type": "object",
      "properties": {
        "data": {
          "xml": {
            "name": "data",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/VastTagDto"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "failureCause": {
          "xml": {
            "name": "failureCause",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/O2Failure"
        },
        "numberOfItems": {
          "type": "integer",
          "format": "int32"
        },
        "requestId": {
          "type": "string"
        },
        "scrollId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "ERROR",
            "FAIL"
          ]
        },
        "totalNumberOfItems": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "OperationResultOfVastTagDto"
    },
    "PageContentDto": {
      "type": "object",
      "properties": {
        "entityId": {
          "type": "string"
        },
        "hidden": {
          "type": "boolean"
        },
        "longTitle": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "playableContent": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlayableContentDto"
          }
        },
        "shortTitle": {
          "type": "string"
        },
        "thumbnail": {
          "$ref": "#/definitions/PageThumbnailDto"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "PageContentDto"
    },
    "PageDto": {
      "type": "object",
      "required": [
        "companyId"
      ],
      "properties": {
        "companyId": {
          "description": "Company id - please turn to support in order to retrieve it",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PageContentDto"
          }
        },
        "creationDate": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "hidden": {
          "type": "boolean"
        },
        "id": {
          "$ref": "#/definitions/ObjectId"
        },
        "longTitle": {
          "type": "string"
        },
        "modificationDate": {
          "type": "integer",
          "format": "int64"
        },
        "modifierId": {
          "description": "Modifier id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "name": {
          "type": "string"
        },
        "ownerId": {
          "description": "Owner id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "parentCompanyId": {
          "description": "Parent company id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "thumbnail": {
          "$ref": "#/definitions/PageThumbnailDto"
        },
        "type": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "PageDto"
    },
    "PageThumbnailDto": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      },
      "title": "PageThumbnailDto"
    },
    "PartialPlayerDto": {
      "type": "object",
      "required": [
        "companyId"
      ],
      "properties": {
        "adSettings": {
          "description": "Player ad settings",
          "allowEmptyValue": false,
          "$ref": "#/definitions/AdSettingsDto"
        },
        "companyId": {
          "description": "Company id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "extraConfigs": {
          "type": "array",
          "description": "Player extra configs",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/ExtraConfigDto"
          }
        },
        "name": {
          "type": "string",
          "description": "Player name",
          "allowEmptyValue": false
        },
        "ownerId": {
          "description": "Player owner Id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "playlistId": {
          "description": "Player playlist Id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "templateConfiguration": {
          "description": "Player template configuration",
          "allowEmptyValue": false,
          "$ref": "#/definitions/PlayerTemplateConfigurationDto"
        },
        "templateId": {
          "description": "Player template Id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        }
      },
      "title": "PartialPlayerDto",
      "description": "Partial player data"
    },
    "PermissionOverrideDto": {
      "type": "object",
      "properties": {
        "permission": {
          "type": "string",
          "enum": [
            "VOID",
            "READ",
            "WRITE",
            "CREATE",
            "DELETE",
            "ADMINISTRATION",
            "REPORT",
            "SEARCH_NOT_OWNED",
            "SEARCH",
            "REFERENCE_SEARCH",
            "VIEW"
          ]
        },
        "type": {
          "type": "string"
        }
      },
      "title": "PermissionOverrideDto"
    },
    "PlaceholderPosterLabelConfigurationDto": {
      "type": "object",
      "properties": {
        "animation": {
          "type": "string",
          "enum": [
            "NONE",
            "PULSING_ELLIPSIS",
            "PULSING_LABEL_ELLIPSIS"
          ]
        },
        "customCssClass": {
          "type": "string"
        },
        "loadingLabel": {
          "type": "string",
          "enum": [
            "OFF",
            "SMALL",
            "LARGE"
          ]
        },
        "text": {
          "type": "string"
        }
      },
      "title": "PlaceholderPosterLabelConfigurationDto"
    },
    "PlayableContentDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "PlayableContentDto"
    },
    "PlayerCreationResponse": {
      "type": "object",
      "properties": {
        "playerId": {
          "$ref": "#/definitions/ObjectId"
        },
        "tag": {
          "type": "string"
        }
      },
      "title": "PlayerCreationResponse"
    },
    "PlayerDto": {
      "type": "object",
      "required": [
        "companyId"
      ],
      "properties": {
        "adSettings": {
          "description": "Player adSettings",
          "allowEmptyValue": false,
          "$ref": "#/definitions/AdSettingsDto"
        },
        "addons": {
          "type": "array",
          "description": "Player addons",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/AddonDto"
          }
        },
        "associatedCompanies": {
          "type": "array",
          "description": "Player associated companies",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/AssociatedCompanyDto"
          }
        },
        "bidId": {
          "description": "Bid id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "brandedContent": {
          "type": "boolean",
          "example": false,
          "description": "Is branded content",
          "allowEmptyValue": false
        },
        "companions": {
          "type": "array",
          "description": "Player ad companions",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/AdCompanionDto"
          }
        },
        "companyId": {
          "description": "Company id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "copyReference": {
          "description": "copyReference",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "customAttributes": {
          "type": "object",
          "description": "Player custom attributes",
          "allowEmptyValue": false,
          "additionalProperties": {
            "type": "string"
          }
        },
        "customMetadata": {
          "type": "array",
          "description": "Player customMetadata",
          "allowEmptyValue": false,
          "items": {
            "type": "string"
          }
        },
        "deliverTranscript": {
          "type": "boolean",
          "example": false,
          "description": "Is deliverTranscript",
          "allowEmptyValue": false
        },
        "description": {
          "type": "string",
          "description": "Player description",
          "allowEmptyValue": false
        },
        "evaluationDate": {
          "type": "integer",
          "format": "int64",
          "description": "Evaluation Date",
          "allowEmptyValue": false
        },
        "extraConfigs": {
          "type": "array",
          "description": "Player extraConfigs",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/ExtraConfigDto"
          }
        },
        "favorite": {
          "type": "boolean",
          "example": false,
          "description": "Is player favorite",
          "allowEmptyValue": false
        },
        "hidden": {
          "type": "boolean",
          "example": false,
          "description": "Is player hidden",
          "allowEmptyValue": false
        },
        "id": {
          "description": "Player id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "lookAndFeel": {
          "description": "Player lookAndFeel",
          "allowEmptyValue": false,
          "$ref": "#/definitions/LookAndFeelDto"
        },
        "macros": {
          "type": "array",
          "description": "Player macros",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/TagMacroDto"
          }
        },
        "mediaCpm": {
          "type": "number",
          "format": "double",
          "description": "mediaCpm",
          "allowEmptyValue": false
        },
        "name": {
          "type": "string",
          "description": "Player name",
          "allowEmptyValue": false
        },
        "nextEvaluationDate": {
          "type": "integer",
          "format": "int64",
          "description": "Next Evaluation Date",
          "allowEmptyValue": false
        },
        "origin": {
          "type": "string",
          "description": "Player origin",
          "allowEmptyValue": false,
          "enum": [
            "MANUALLY",
            "AUTO",
            "SYSTEM"
          ]
        },
        "ownerId": {
          "description": "Player owner Id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "parentCompanyId": {
          "description": "parent company id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "posterLearnable": {
          "type": "boolean",
          "example": false,
          "description": "Is poster learnable",
          "allowEmptyValue": false
        },
        "publisherAmount": {
          "type": "number",
          "format": "double",
          "description": "publisherAmount",
          "allowEmptyValue": false
        },
        "publisherPayout": {
          "type": "string",
          "description": "publisherPayout",
          "allowEmptyValue": false,
          "enum": [
            "NONE",
            "PER_AD",
            "REVENUE_SHARE"
          ]
        },
        "readOnly": {
          "type": "boolean",
          "example": false,
          "description": "Is player read only",
          "allowEmptyValue": false
        },
        "shared": {
          "type": "boolean",
          "example": false,
          "description": "Is player shared",
          "allowEmptyValue": false
        },
        "showOnDiscovery": {
          "type": "boolean",
          "example": false,
          "description": "Is show on discovery",
          "allowEmptyValue": false
        },
        "socialNetworks": {
          "type": "array",
          "description": "Player social networks",
          "allowEmptyValue": false,
          "items": {
            "type": "string",
            "enum": [
              "FACEBOOK",
              "TWITTER",
              "LINKEDIN",
              "WEIBO"
            ]
          }
        },
        "templateConfiguration": {
          "description": "Player template configuration",
          "allowEmptyValue": false,
          "$ref": "#/definitions/PlayerTemplateConfigurationDto"
        },
        "templateId": {
          "description": "Player template Id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "type": {
          "type": "string",
          "description": "Player type",
          "allowEmptyValue": false,
          "enum": [
            "O2",
            "YAHOO",
            "NONE"
          ]
        },
        "videoIds": {
          "type": "array",
          "description": "Video ids",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/ObjectId"
          }
        },
        "videosToPlay": {
          "type": "integer",
          "format": "int32",
          "description": "Videos to play",
          "allowEmptyValue": false
        },
        "videosToRequest": {
          "type": "integer",
          "format": "int32",
          "description": "Videos to request",
          "allowEmptyValue": false
        },
        "widget": {
          "description": "Player widget",
          "allowEmptyValue": false,
          "$ref": "#/definitions/PlayerTypeWidgetDto"
        },
        "workflowType": {
          "type": "string",
          "description": "Player workflow type",
          "allowEmptyValue": false,
          "enum": [
            "DEFAULT",
            "COMMERCIALIZE",
            "BE_ON",
            "LOWLANDER"
          ]
        }
      },
      "title": "PlayerDto",
      "description": "Player data"
    },
    "PlayerTemplateConfigurationDto": {
      "type": "object",
      "properties": {
        "adSettingsConfiguration": {
          "$ref": "#/definitions/AdSettingsConfigurationDto"
        },
        "ageGateThreshold": {
          "type": "string",
          "enum": [
            "ALL_AGE_GROUPS",
            "ALL_CHILDREN",
            "ADULTS_ONLY",
            "AGE_17_AND_ABOVE",
            "AGE_14_AND_ABOVE",
            "AGE_10_AND_ABOVE",
            "AGE_7_AND_ABOVE",
            "NO_ONE"
          ]
        },
        "companions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdCompanionDto"
          }
        },
        "customMetadata": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "emptyCompanionsOverride": {
          "type": "boolean"
        },
        "emptyCustomMetadataOverride": {
          "type": "boolean"
        },
        "emptyExtraConfigsOverride": {
          "type": "boolean"
        },
        "emptySocialNetworksOverride": {
          "type": "boolean"
        },
        "extraConfigs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtraConfigDto"
          }
        },
        "lookAndFeel": {
          "$ref": "#/definitions/LookAndFeelDto"
        },
        "socialNetworks": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "FACEBOOK",
              "TWITTER",
              "LINKEDIN",
              "WEIBO"
            ]
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "O2",
            "YAHOO",
            "NONE"
          ]
        },
        "videosToPlay": {
          "type": "integer",
          "format": "int32"
        },
        "videosToRequest": {
          "type": "integer",
          "format": "int32"
        },
        "vrRenderer": {
          "type": "string",
          "enum": [
            "ENVRMNT",
            "O2"
          ]
        },
        "widget": {
          "$ref": "#/definitions/PlayerTypeWidgetDto"
        }
      },
      "title": "PlayerTemplateConfigurationDto"
    },
    "PlayerTypeWidgetDto": {
      "type": "object",
      "properties": {
        "adOnly": {
          "type": "boolean"
        },
        "aol": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "enum": [
            "HTML5",
            "HULU",
            "MOBILE",
            "SDK",
            "VDMS",
            "VERIZON_MEDIA",
            "NONE",
            "FLASH",
            "SMART"
          ]
        },
        "widgetId": {
          "$ref": "#/definitions/ObjectId"
        }
      },
      "title": "PlayerTypeWidgetDto"
    },
    "PlaylistDto": {
      "type": "object",
      "required": [
        "companyId"
      ],
      "properties": {
        "allowedOperations": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "VOID",
              "READ",
              "WRITE",
              "CREATE",
              "DELETE",
              "VIEW",
              "ADMINISTRATION",
              "REPORT",
              "SEARCH_NOT_OWNED",
              "SEARCH",
              "REFERENCE_SEARCH"
            ]
          }
        },
        "companyId": {
          "description": "Company id - please turn to support in order to retrieve it",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "creationDate": {
          "type": "integer",
          "format": "int64"
        },
        "deleted": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "evaluationDate": {
          "type": "integer",
          "format": "int64"
        },
        "geoTargeting": {
          "type": "boolean"
        },
        "hidden": {
          "type": "boolean"
        },
        "id": {
          "$ref": "#/definitions/ObjectId"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modificationDate": {
          "type": "integer",
          "format": "int64"
        },
        "modifierId": {
          "description": "Modifier id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "name": {
          "type": "string"
        },
        "nextEvaluationDate": {
          "type": "integer",
          "format": "int64"
        },
        "originType": {
          "type": "string",
          "enum": [
            "MANUALLY",
            "AUTO",
            "SYSTEM"
          ]
        },
        "ownerId": {
          "description": "Owner id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "parentCompanyId": {
          "description": "Parent company id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "pods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodDto"
          }
        },
        "semantic": {
          "type": "boolean"
        },
        "semanticInfo": {
          "$ref": "#/definitions/SemanticInfo"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "smartTags": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObjectId"
            }
          }
        },
        "sortColumn": {
          "$ref": "#/definitions/SortColumn"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        },
        "videoCount": {
          "type": "integer",
          "format": "int32"
        },
        "videoExclude": {
          "$ref": "#/definitions/VideoExcludeDto"
        },
        "whiteBlackRestriction": {
          "$ref": "#/definitions/WhiteBlackRestriction"
        },
        "workflowType": {
          "type": "string",
          "enum": [
            "DEFAULT",
            "COMMERCIALIZE",
            "BE_ON",
            "LOWLANDER"
          ]
        }
      },
      "title": "PlaylistDto"
    },
    "PlaylistItem": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "modificationDate": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "numberOfVideos": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "thumbnail": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "PlaylistItem"
    },
    "PlaylistResponseDto": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlaylistItem"
          }
        },
        "scrollId": {
          "type": "string"
        }
      },
      "title": "PlaylistResponseDto"
    },
    "PlaylistWithVideos": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "videos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VideoDto"
          }
        }
      },
      "title": "PlaylistWithVideos"
    },
    "PodDto": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "STATIC",
            "DYNAMIC",
            "REFERENCE",
            "REVENUE_OPTIMIZED",
            "TRENDING_TOPICS",
            "UNKNOWN"
          ]
        }
      },
      "title": "PodDto"
    },
    "PriceDto": {
      "type": "object",
      "properties": {
        "download": {
          "type": "number",
          "format": "double"
        },
        "minimum": {
          "type": "number",
          "format": "double"
        },
        "suggested": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "PriceDto"
    },
    "RectangleDto": {
      "type": "object",
      "properties": {
        "h": {
          "type": "integer",
          "format": "int32"
        },
        "w": {
          "type": "integer",
          "format": "int32"
        },
        "x": {
          "type": "integer",
          "format": "int32"
        },
        "y": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "RectangleDto"
    },
    "ResponseItemDto": {
      "type": "object",
      "title": "ResponseItemDto"
    },
    "ResponseStatus": {
      "type": "object",
      "title": "ResponseStatus"
    },
    "SearchCriteriaFields": {
      "type": "object",
      "properties": {
        "ageRatings": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "KIDS",
              "TWEENS",
              "TEENS",
              "ADULTS",
              "SENIORS",
              "NONE_SPECIFIED"
            ]
          }
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "companyGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "companyIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contentDescriptors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "D",
              "L",
              "S",
              "V",
              "FV",
              "AR",
              "ND"
            ]
          }
        },
        "contentRatings": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Y",
              "Y7",
              "G",
              "PG",
              "PG14",
              "MA",
              "NC17",
              "NR"
            ]
          }
        },
        "includeFemale": {
          "type": "boolean"
        },
        "includeHidden": {
          "type": "boolean"
        },
        "includeMale": {
          "type": "boolean"
        },
        "includeNoDescriptorsSet": {
          "type": "boolean"
        },
        "includeNotHidden": {
          "type": "boolean"
        },
        "includeNotOwned": {
          "type": "boolean"
        },
        "includeNotReadOnly": {
          "type": "boolean"
        },
        "includeOwned": {
          "type": "boolean"
        },
        "includeReadOnly": {
          "type": "boolean"
        },
        "languages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxPrice": {
          "type": "number",
          "format": "double"
        },
        "minPrice": {
          "type": "number",
          "format": "double"
        },
        "primaryCompanyGroupId": {
          "type": "string"
        },
        "rawQuery": {
          "type": "string"
        },
        "systemCreated": {
          "type": "boolean"
        },
        "userCreated": {
          "type": "boolean"
        }
      },
      "title": "SearchCriteriaFields"
    },
    "SellerRuleDto": {
      "type": "object",
      "required": [
        "companyId",
        "name"
      ],
      "properties": {
        "allowCasting": {
          "type": "boolean",
          "example": false,
          "description": "Allow video casting",
          "allowEmptyValue": false
        },
        "allowDownload": {
          "type": "boolean",
          "example": false,
          "description": "Allow download of this seller rule",
          "allowEmptyValue": false
        },
        "allowThumbnailDownload": {
          "type": "boolean",
          "example": false,
          "description": "Allow thumbnail of this seller rule",
          "allowEmptyValue": false
        },
        "companyId": {
          "description": "Company id - please turn to support in order to retrieve it",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "creationDate": {
          "type": "integer",
          "format": "int64"
        },
        "default": {
          "type": "boolean"
        },
        "discounts": {
          "type": "array",
          "description": "Discounts",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/DiscountDto"
          }
        },
        "geoRestriction": {
          "description": "Geo restriction",
          "allowEmptyValue": false,
          "$ref": "#/definitions/GeoRestrictionDto"
        },
        "hidden": {
          "type": "boolean"
        },
        "id": {
          "description": "Seller rule ID",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "inheritWhiteLabelGeoRestriction": {
          "type": "boolean",
          "example": false,
          "description": "Inherit white label geo restriction",
          "allowEmptyValue": false
        },
        "inheritWhiteLabelUrlPatternsRestriction": {
          "type": "boolean",
          "example": false,
          "description": "Inherit white label url patterns restriction",
          "allowEmptyValue": false
        },
        "inheritWhiteLabelVideoRestrictions": {
          "type": "boolean",
          "example": false,
          "description": "Should this seller rule inherit white label video restrictions",
          "allowEmptyValue": false
        },
        "modificationDate": {
          "type": "integer",
          "format": "int64",
          "description": "Modification date",
          "allowEmptyValue": false
        },
        "modifierId": {
          "description": "Modifier id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "name": {
          "type": "string",
          "description": "Name",
          "allowEmptyValue": false
        },
        "origin": {
          "type": "string",
          "description": "origin",
          "allowEmptyValue": false,
          "enum": [
            "MANUALLY",
            "AUTO",
            "SYSTEM"
          ]
        },
        "ownerId": {
          "description": "Owner id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "parentCompanyId": {
          "description": "Parent company id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "price": {
          "description": "Price",
          "allowEmptyValue": false,
          "$ref": "#/definitions/PriceDto"
        },
        "urlPatternsRestriction": {
          "description": "URL pattern restriction",
          "allowEmptyValue": false,
          "$ref": "#/definitions/UrlPatternsRestrictionDto"
        },
        "videoRestriction": {
          "description": "Restrict video to following country",
          "allowEmptyValue": false,
          "$ref": "#/definitions/VideoRestrictionDto"
        }
      },
      "title": "SellerRuleDto",
      "description": "Seller rule"
    },
    "SemanticInfo": {
      "type": "object",
      "properties": {
        "bottomPosition": {
          "type": "boolean"
        },
        "enable": {
          "type": "boolean"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "SemanticInfo"
    },
    "SimpleNamedEntityDto": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/ObjectId"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "SimpleNamedEntityDto"
    },
    "SimpleWhiteBlackRestrictionDto": {
      "type": "object",
      "properties": {
        "accessibilityScope": {
          "type": "string",
          "enum": [
            "PUBLIC",
            "PRIVATE",
            "PRIVATE_WHITELIST_AFFILIATES",
            "BLACKLIST_WHITELIST"
          ]
        },
        "availabilityScope": {
          "type": "string",
          "enum": [
            "EVERYWHERE",
            "SUBDOMAIN_ONLY"
          ]
        },
        "blackListMode": {
          "type": "boolean"
        },
        "companyBlackList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedEntityWithExclusionsDto"
          }
        },
        "companyGroupBlackList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedEntityWithExclusionsDto"
          }
        },
        "companyGroupWhiteList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedEntityWithExclusionsDto"
          }
        },
        "companyWhiteList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedEntityWithExclusionsDto"
          }
        }
      },
      "title": "SimpleWhiteBlackRestrictionDto"
    },
    "SiteTargetDto": {
      "type": "object",
      "properties": {
        "allow": {
          "type": "boolean"
        },
        "domains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "SiteTargetDto"
    },
    "SmartTagDto": {
      "type": "object",
      "required": [
        "companyId",
        "name"
      ],
      "properties": {
        "aliases": {
          "type": "array",
          "description": "Smart Tag's aliases",
          "allowEmptyValue": false,
          "items": {
            "type": "string"
          }
        },
        "availableRelationshipTypes": {
          "type": "array",
          "description": "Available relationship types",
          "allowEmptyValue": false,
          "items": {
            "type": "string"
          }
        },
        "companyId": {
          "description": "Company id - please turn to support in order to retrieve it",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "customAttributes": {
          "type": "object",
          "description": "Custom attributes that owner would like to store",
          "allowEmptyValue": false,
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "description": "Smart Tag's description",
          "allowEmptyValue": false
        },
        "event": {
          "description": "Event data",
          "allowEmptyValue": false,
          "$ref": "#/definitions/EventDto"
        },
        "id": {
          "description": "id - please turn to support in order to retrieve it",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "modifierId": {
          "description": "Modifier id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "name": {
          "type": "string",
          "description": "Smart Tag's name",
          "allowEmptyValue": false
        },
        "ownerId": {
          "description": "Owner id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "parentCompanyId": {
          "description": "Parent company id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "restriction": {
          "description": "Smart Tag's restriction",
          "allowEmptyValue": false,
          "$ref": "#/definitions/WhiteBlackRestrictionDto"
        },
        "smartTagType": {
          "type": "string",
          "description": "Smart tag's type",
          "allowEmptyValue": false,
          "enum": [
            "NONE",
            "PERSON",
            "MOVIE",
            "SERIES",
            "SHOW",
            "EVENT",
            "SPORTS",
            "EPISODE",
            "SEASON",
            "VEHICLE"
          ]
        },
        "smartTags": {
          "type": "object",
          "description": "Linked smart tags",
          "allowEmptyValue": false,
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObjectId"
            }
          }
        },
        "thumbnails": {
          "type": "array",
          "description": "Available thumbnails for smart tag",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/ThumbnailDto"
          }
        },
        "url": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "urls": {
          "type": "array",
          "description": "Smart Tag's urls (wiki, imdb, etc.)",
          "allowEmptyValue": false,
          "items": {
            "type": "string"
          }
        }
      },
      "title": "SmartTagDto"
    },
    "SortColumn": {
      "type": "object",
      "properties": {
        "ascending": {
          "type": "boolean"
        },
        "columnName": {
          "type": "string"
        }
      },
      "title": "SortColumn"
    },
    "StoryDto": {
      "type": "object",
      "properties": {
        "creationTime": {
          "type": "integer",
          "format": "int64"
        },
        "documentCount": {
          "type": "integer",
          "format": "int32"
        },
        "heat": {
          "type": "number",
          "format": "double"
        },
        "id": {
          "type": "string"
        }
      },
      "title": "StoryDto"
    },
    "StringBoundaryDto": {
      "type": "object",
      "properties": {
        "operation": {
          "type": "string",
          "enum": [
            "EQ",
            "LESS",
            "LESS_OR_EQ",
            "GREATER",
            "GREATER_OR_EQ"
          ]
        },
        "value": {
          "type": "string"
        }
      },
      "title": "StringBoundaryDto"
    },
    "SubtitleDto": {
      "type": "object",
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubtitleFileDto"
          }
        },
        "format": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "SRT",
            "TTML",
            "DFXP",
            "VTT",
            "HLSVTT",
            "TT"
          ]
        },
        "language": {
          "type": "string"
        },
        "languageCode": {
          "type": "string"
        },
        "modificationDate": {
          "type": "integer",
          "format": "int64"
        },
        "subtitleType": {
          "type": "string",
          "enum": [
            "SUBTITLE",
            "CLOSED_CAPTION"
          ]
        },
        "url": {
          "type": "string"
        }
      },
      "title": "SubtitleDto"
    },
    "SubtitleFileDto": {
      "type": "object",
      "properties": {
        "autoGenerated": {
          "type": "boolean"
        },
        "format": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "SRT",
            "TTML",
            "DFXP",
            "VTT",
            "HLSVTT",
            "TT"
          ]
        },
        "modificationDate": {
          "type": "integer",
          "format": "int64"
        },
        "originalExternalUrl": {
          "type": "string"
        },
        "subtitleType": {
          "type": "string",
          "enum": [
            "SUBTITLE",
            "CLOSED_CAPTION"
          ]
        },
        "uploaded": {
          "type": "boolean"
        },
        "url": {
          "type": "string"
        }
      },
      "title": "SubtitleFileDto"
    },
    "SubtitleSettingsDto": {
      "type": "object",
      "properties": {
        "defaultLanguage": {
          "type": "string"
        },
        "machineTranslation": {
          "type": "boolean"
        },
        "mode": {
          "type": "string",
          "enum": [
            "ENABLE_IF_MUTED",
            "ENABLE",
            "DISABLE"
          ]
        }
      },
      "title": "SubtitleSettingsDto"
    },
    "TagMacroDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "TagMacroDto"
    },
    "TaxonomyCategoryDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "relegenceId": {
          "type": "integer",
          "format": "int32"
        },
        "score": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "TaxonomyCategoryDto"
    },
    "ThumbnailDto": {
      "type": "object",
      "properties": {
        "chosenType": {
          "type": "string",
          "enum": [
            "NONE",
            "CUSTOM",
            "AUTO"
          ]
        },
        "covering": {
          "type": "boolean"
        },
        "id": {
          "$ref": "#/definitions/ObjectId"
        },
        "score": {
          "type": "number",
          "format": "double"
        },
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThumbnailSizeDto"
          }
        },
        "time": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string",
          "enum": [
            "AUTO",
            "FEED",
            "USER",
            "FES"
          ]
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ThumbnailDto"
    },
    "ThumbnailSizeDto": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "original": {
          "type": "boolean"
        },
        "url": {
          "type": "string"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ThumbnailSizeDto"
    },
    "TvShowDto": {
      "type": "object",
      "properties": {
        "episodeNumber": {
          "type": "integer",
          "format": "int32"
        },
        "seasonNumber": {
          "type": "integer",
          "format": "int32"
        },
        "showTitle": {
          "type": "string"
        }
      },
      "title": "TvShowDto"
    },
    "UrlPatternsRestrictionDto": {
      "type": "object",
      "properties": {
        "blackListMode": {
          "type": "boolean"
        },
        "blackListUrlPatterns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "whiteListUrlPatterns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "UrlPatternsRestrictionDto"
    },
    "UserDto": {
      "type": "object",
      "required": [
        "companyId",
        "email",
        "firstName",
        "lastName",
        "password",
        "roleId"
      ],
      "properties": {
        "assignedCompanies": {
          "type": "array",
          "description": "User assigned companies",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/ObjectId"
          }
        },
        "companyId": {
          "description": "Company id - please turn to support in order to retrieve it",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "creationDate": {
          "type": "integer",
          "format": "int64",
          "description": "User creation date",
          "allowEmptyValue": false
        },
        "email": {
          "type": "string",
          "description": "User email",
          "allowEmptyValue": false
        },
        "firstName": {
          "type": "string",
          "description": "User first name",
          "allowEmptyValue": false
        },
        "id": {
          "description": "id - please turn to support in order to retrieve it",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "lastName": {
          "type": "string",
          "description": "User last name",
          "allowEmptyValue": false
        },
        "modificationDate": {
          "type": "integer",
          "format": "int64",
          "description": "Modification date",
          "allowEmptyValue": false
        },
        "modifierId": {
          "description": "Modifier id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "ownerId": {
          "description": "Owner id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "parentCompanyId": {
          "description": "Parent company id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "password": {
          "type": "string",
          "description": "User password",
          "allowEmptyValue": false
        },
        "roleId": {
          "description": "User role id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        }
      },
      "title": "UserDto",
      "description": "User data"
    },
    "VastTagDto": {
      "type": "object",
      "required": [
        "companyId",
        "name",
        "videoId"
      ],
      "properties": {
        "adCampaignId": {
          "description": "adCampaign id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "clickTracker": {
          "type": "string",
          "description": "click tracker",
          "allowEmptyValue": false
        },
        "companyId": {
          "description": "Company id - please turn to support in order to retrieve it",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "id": {
          "description": "id - please turn to support in order to retrieve it",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "modifierId": {
          "description": "Modifier id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "name": {
          "type": "string",
          "description": "name",
          "allowEmptyValue": false
        },
        "ownerId": {
          "description": "Owner id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "parentCompanyId": {
          "description": "Parent company id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "videoId": {
          "description": "videoId",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "weight": {
          "type": "number",
          "format": "double",
          "description": "weight",
          "allowEmptyValue": false
        }
      },
      "title": "VastTagDto"
    },
    "VideoAdConfigDto": {
      "type": "object",
      "properties": {
        "adType": {
          "type": "string",
          "enum": [
            "MIDROLL",
            "PREROLL"
          ]
        },
        "unit": {
          "type": "string",
          "enum": [
            "SECOND",
            "PERCENT"
          ]
        },
        "value": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "VideoAdConfigDto"
    },
    "VideoAdSettingsDto": {
      "type": "object",
      "required": [
        "companyId"
      ],
      "properties": {
        "adConfigList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VideoAdConfigDto"
          }
        },
        "companyId": {
          "description": "Company id - please turn to support in order to retrieve it",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "creationDate": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/ObjectId"
        },
        "modificationDate": {
          "type": "integer",
          "format": "int64"
        },
        "modifierId": {
          "description": "Modifier id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "name": {
          "type": "string"
        },
        "ownerId": {
          "description": "Owner id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "parentCompanyId": {
          "description": "Parent company id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        }
      },
      "title": "VideoAdSettingsDto",
      "description": "VideoAdSettings"
    },
    "VideoDto": {
      "type": "object",
      "required": [
        "companyId"
      ],
      "properties": {
        "ageRatings": {
          "type": "array",
          "description": "Age ratings for video",
          "allowEmptyValue": false,
          "items": {
            "type": "string",
            "enum": [
              "KIDS",
              "TWEENS",
              "TEENS",
              "ADULTS",
              "SENIORS",
              "NONE_SPECIFIED"
            ]
          }
        },
        "animatedThumbnails": {
          "type": "array",
          "description": "List of video animated thumbnails (mp4, gif)",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/AnimatedThumbnailDto"
          }
        },
        "associatedCompanies": {
          "type": "array",
          "description": "Video associated companies",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/AssociatedCompanyDto"
          }
        },
        "audienceAgeRange": {
          "description": "Audience age range",
          "allowEmptyValue": false,
          "$ref": "#/definitions/AgeRangeDto"
        },
        "audienceGender": {
          "type": "string",
          "description": "Gender audience",
          "allowEmptyValue": false,
          "enum": [
            "MALE",
            "FEMALE",
            "ALL"
          ]
        },
        "audioUrl": {
          "type": "string",
          "description": "Url for the audio",
          "allowEmptyValue": false
        },
        "author": {
          "type": "array",
          "description": "List of authors",
          "allowEmptyValue": false,
          "items": {
            "type": "string"
          }
        },
        "carmotMetadata": {
          "description": "Video carmot metadata",
          "allowEmptyValue": false,
          "$ref": "#/definitions/CarmotMetadataDto"
        },
        "category": {
          "type": "array",
          "description": "List of classification categories",
          "allowEmptyValue": false,
          "items": {
            "type": "string"
          }
        },
        "classificationResult": {
          "description": "video classification result",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ClassificationDto"
        },
        "classify": {
          "type": "boolean",
          "example": false,
          "description": "Enable video classification",
          "allowEmptyValue": false
        },
        "clickUrl": {
          "type": "string",
          "description": "Click url",
          "allowEmptyValue": false
        },
        "commonRating": {
          "description": "Video common rating",
          "allowEmptyValue": false,
          "$ref": "#/definitions/CommonRatingDto"
        },
        "companyId": {
          "description": "Company id - please turn to support in order to retrieve it",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "companyName": {
          "type": "string"
        },
        "contentLifecycle": {
          "type": "string",
          "description": "Content life cycle",
          "allowEmptyValue": false,
          "enum": [
            "EVERGREEN",
            "FASTBREAKING",
            "LIVE"
          ]
        },
        "copyright": {
          "type": "string",
          "description": "Video copyright notice",
          "allowEmptyValue": false
        },
        "countries": {
          "type": "array",
          "description": "Allowed countries",
          "allowEmptyValue": false,
          "items": {
            "type": "string"
          }
        },
        "creationDate": {
          "type": "integer",
          "format": "int64",
          "description": "Video creation date",
          "allowEmptyValue": false
        },
        "credit": {
          "type": "string",
          "description": "Video credit",
          "allowEmptyValue": false
        },
        "cuePoints": {
          "type": "array",
          "description": "Video cue points",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/CuePointDto"
          }
        },
        "customAttributes": {
          "type": "object",
          "description": "Custom attributes",
          "allowEmptyValue": false,
          "additionalProperties": {
            "type": "string"
          }
        },
        "deleted": {
          "type": "boolean",
          "example": false,
          "description": "Is video deleted",
          "allowEmptyValue": false
        },
        "description": {
          "type": "string",
          "description": "Long description of the video",
          "allowEmptyValue": false
        },
        "deviceRestriction": {
          "description": "Device restrictions",
          "allowEmptyValue": false,
          "$ref": "#/definitions/DeviceRestrictionDto"
        },
        "encodedVariants": {
          "type": "array",
          "description": "List of encoded variants (video renditions)",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/EncodedVariantDto"
          }
        },
        "encodingProfileId": {
          "description": "Video encoding profile id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "endDate": {
          "type": "integer",
          "format": "int64",
          "description": "Video end date",
          "allowEmptyValue": false
        },
        "externalContentId": {
          "type": "string",
          "description": "External content id",
          "allowEmptyValue": false
        },
        "externalId": {
          "type": "string",
          "description": "Video external id",
          "allowEmptyValue": false
        },
        "feedId": {
          "description": "Video feed id - if relevant please turn to support in order to retrieve it",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "feedThumbnail": {
          "description": "Video feed thumbnail",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ApiThumbnailDto"
        },
        "geoRestriction": {
          "description": "Geo restrictions",
          "allowEmptyValue": false,
          "$ref": "#/definitions/GeoRestrictionDto"
        },
        "hidden": {
          "type": "boolean",
          "example": false,
          "description": "Is video hidden",
          "allowEmptyValue": false
        },
        "iabCategories": {
          "type": "array",
          "description": "IAB categories",
          "allowEmptyValue": false,
          "items": {
            "type": "string"
          }
        },
        "id": {
          "description": "Video id - please turn to support in order to retrieve it",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "keywords": {
          "type": "array",
          "description": "List of classification keywords",
          "allowEmptyValue": false,
          "items": {
            "type": "string"
          }
        },
        "language": {
          "description": "Video language",
          "allowEmptyValue": false,
          "$ref": "#/definitions/LanguageDto"
        },
        "length": {
          "type": "integer",
          "format": "int64",
          "description": "Video length",
          "allowEmptyValue": false
        },
        "logo": {
          "description": "Video logo",
          "allowEmptyValue": false,
          "$ref": "#/definitions/LogoDto"
        },
        "maxAds": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of ads",
          "allowEmptyValue": false
        },
        "media": {
          "description": "Video media",
          "allowEmptyValue": false,
          "$ref": "#/definitions/MediaDto"
        },
        "metadata": {
          "type": "object",
          "description": "Video metadata",
          "allowEmptyValue": false,
          "additionalProperties": {
            "type": "string"
          }
        },
        "modificationDate": {
          "type": "integer",
          "format": "int64",
          "description": "Video modification date",
          "allowEmptyValue": false
        },
        "modifierId": {
          "description": "Modifier id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "monthViews": {
          "type": "integer",
          "format": "int64",
          "description": "Video number of plays for last month",
          "allowEmptyValue": false
        },
        "name": {
          "type": "string",
          "description": "The name of the video",
          "allowEmptyValue": false
        },
        "numberOfVideos": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of videos",
          "allowEmptyValue": false
        },
        "originalVideoUrl": {
          "type": "string",
          "description": "Original video url",
          "allowEmptyValue": false
        },
        "ownerId": {
          "description": "Owner id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "parentCompanyId": {
          "description": "Parent company id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "playbackAvailable": {
          "type": "boolean",
          "example": false,
          "description": "Is video playback available",
          "allowEmptyValue": false
        },
        "player": {
          "type": "string",
          "description": "Player Tag that can be embed directly into html page",
          "allowEmptyValue": false
        },
        "plays": {
          "type": "integer",
          "format": "int64",
          "description": "Video number of plays for last seven days",
          "allowEmptyValue": false
        },
        "publishDate": {
          "type": "integer",
          "format": "int64",
          "description": "Video publish date",
          "allowEmptyValue": false
        },
        "publisherViews": {
          "type": "integer",
          "format": "int64",
          "description": "Number of publisher video views",
          "allowEmptyValue": false
        },
        "rating": {
          "type": "array",
          "description": "Video rating",
          "allowEmptyValue": false,
          "items": {
            "type": "string"
          }
        },
        "rssVideoId": {
          "type": "string",
          "description": "Video rss id",
          "allowEmptyValue": false
        },
        "sellerRuleId": {
          "description": "Video sellerRule id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "shortDescription": {
          "type": "string",
          "description": "Short description of the video",
          "allowEmptyValue": false
        },
        "smartTags": {
          "type": "object",
          "description": "Relationship type and ids of Smart Tags linked to video",
          "allowEmptyValue": false,
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObjectId"
            }
          }
        },
        "startDate": {
          "type": "integer",
          "format": "int64",
          "description": "Video start date",
          "allowEmptyValue": false
        },
        "storageType": {
          "type": "string",
          "description": "Video storage type",
          "allowEmptyValue": false,
          "enum": [
            "ENCODED",
            "EXTERNAL",
            "COPIED"
          ]
        },
        "subtitles": {
          "type": "array",
          "description": "Video subtitles",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/SubtitleDto"
          }
        },
        "supportedPlayerTypes": {
          "type": "array",
          "description": "List of supported player types",
          "allowEmptyValue": false,
          "items": {
            "type": "string",
            "enum": [
              "O2",
              "YAHOO",
              "NONE"
            ]
          }
        },
        "systemThumbnails": {
          "type": "array",
          "description": "Video thumbnails",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/ApiThumbnailDto"
          }
        },
        "thumbnails": {
          "type": "array",
          "description": "Thumbnails for video create/update call",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/ThumbnailDto"
          }
        },
        "thumbnailsNew": {
          "type": "array",
          "description": "List of video thumbnails",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/ThumbnailDto"
          }
        },
        "totalViews": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of video plays",
          "allowEmptyValue": false
        },
        "transcript": {
          "type": "string",
          "description": "Video transcript",
          "allowEmptyValue": false
        },
        "tvShow": {
          "description": "Tv show",
          "allowEmptyValue": false,
          "$ref": "#/definitions/TvShowDto"
        },
        "uploadErrorMessage": {
          "type": "string",
          "description": "Video upload error",
          "allowEmptyValue": false
        },
        "uploadState": {
          "type": "string",
          "description": "Video upload state",
          "allowEmptyValue": false,
          "enum": [
            "PENDING",
            "ENCODING",
            "PROPAGATING",
            "READY",
            "FAILED"
          ]
        },
        "url": {
          "type": "string",
          "description": "url to video under specified bid",
          "allowEmptyValue": false
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "Version of video",
          "allowEmptyValue": false
        },
        "videoAdSettingsId": {
          "description": "Video ad settings id",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ObjectId"
        },
        "videoProjectionType": {
          "type": "string",
          "description": "Video projection type",
          "allowEmptyValue": false,
          "enum": [
            "Equirectangular",
            "360fly"
          ]
        },
        "videoSourceType": {
          "type": "string",
          "description": "Video source type",
          "allowEmptyValue": false,
          "enum": [
            "FILE",
            "YOUTUBE",
            "YOUKU",
            "ENVRMNT",
            "IMAGE",
            "CARMOT",
            "HULU"
          ]
        },
        "videoType": {
          "type": "string",
          "description": "Video type",
          "allowEmptyValue": false,
          "enum": [
            "360",
            "Live",
            "Live360",
            "Audio",
            "VOD"
          ]
        },
        "videoViews": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of video plays",
          "allowEmptyValue": false
        },
        "vlsId": {
          "type": "string",
          "description": "vlsId",
          "allowEmptyValue": false
        },
        "weekViews": {
          "type": "integer",
          "format": "int64",
          "description": "Video number of plays for last seven days",
          "allowEmptyValue": false
        }
      },
      "title": "VideoDto",
      "description": "Video meta data"
    },
    "VideoExcludeDto": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        },
        "videoIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectId"
          }
        }
      },
      "title": "VideoExcludeDto"
    },
    "VideoRestrictionDto": {
      "type": "object",
      "properties": {
        "accessibilityScope": {
          "type": "string",
          "enum": [
            "PUBLIC",
            "PRIVATE",
            "PRIVATE_WHITELIST_AFFILIATES",
            "BLACKLIST_WHITELIST"
          ]
        },
        "availabilityScope": {
          "type": "string",
          "enum": [
            "EVERYWHERE",
            "SUBDOMAIN_ONLY"
          ]
        },
        "blackListMode": {
          "type": "boolean"
        },
        "companyBlackList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedEntityWithExclusionsDto"
          }
        },
        "companyGroupBlackList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedEntityWithExclusionsDto"
          }
        },
        "companyGroupWhiteList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedEntityWithExclusionsDto"
          }
        },
        "companyWhiteList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedEntityWithExclusionsDto"
          }
        },
        "whiteListAffiliates": {
          "type": "boolean"
        }
      },
      "title": "VideoRestrictionDto"
    },
    "VideoStatus": {
      "type": "object",
      "properties": {
        "available": {
          "type": "boolean"
        },
        "reason": {
          "type": "string",
          "enum": [
            "DELETED",
            "ARCHIVED",
            "RESTRICTED",
            "FORBIDDEN",
            "FUTURE_ACTIVATION",
            "EXPIRED"
          ]
        },
        "videoId": {
          "$ref": "#/definitions/ObjectId"
        }
      },
      "title": "VideoStatus"
    },
    "VideoStatusView": {
      "type": "object",
      "properties": {
        "mrss_guid": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "vid": {
          "$ref": "#/definitions/ObjectId"
        }
      },
      "title": "VideoStatusView"
    },
    "VlsSettingsDto": {
      "type": "object",
      "properties": {
        "vlsApiKey": {
          "type": "string"
        },
        "vlsApiSecret": {
          "type": "string"
        },
        "vlsFeedId": {
          "$ref": "#/definitions/ObjectId"
        }
      },
      "title": "VlsSettingsDto"
    },
    "WhiteBlackCompany": {
      "type": "object",
      "properties": {
        "excluded": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhiteBlackCompany"
          }
        },
        "id": {
          "$ref": "#/definitions/Id"
        }
      },
      "title": "WhiteBlackCompany"
    },
    "WhiteBlackCompanyDto": {
      "type": "object",
      "properties": {
        "excluded": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhiteBlackCompanyDto"
          }
        },
        "id": {
          "$ref": "#/definitions/ObjectId"
        }
      },
      "title": "WhiteBlackCompanyDto"
    },
    "WhiteBlackRestriction": {
      "type": "object",
      "properties": {
        "accessibilityScope": {
          "type": "string",
          "enum": [
            "Public",
            "Private",
            "Private, but WhiteList My Affiliates",
            "BlackList/WhiteList"
          ]
        },
        "availabilityScope": {
          "type": "string",
          "enum": [
            "EVERYWHERE",
            "SUBDOMAIN_ONLY"
          ]
        },
        "blackListMode": {
          "type": "boolean"
        },
        "companyBlackList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhiteBlackCompany"
          }
        },
        "companyGroupBlackList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhiteBlackCompany"
          }
        },
        "companyGroupWhiteList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhiteBlackCompany"
          }
        },
        "companyWhiteList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhiteBlackCompany"
          }
        }
      },
      "title": "WhiteBlackRestriction"
    },
    "WhiteBlackRestrictionDto": {
      "type": "object",
      "properties": {
        "accessibilityScope": {
          "type": "string",
          "enum": [
            "PUBLIC",
            "PRIVATE",
            "PRIVATE_WHITELIST_AFFILIATES",
            "BLACKLIST_WHITELIST"
          ]
        },
        "availabilityScope": {
          "type": "string",
          "enum": [
            "EVERYWHERE",
            "SUBDOMAIN_ONLY"
          ]
        },
        "blackListMode": {
          "type": "boolean"
        },
        "companyBlackList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhiteBlackCompanyDto"
          }
        },
        "companyGroupBlackList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhiteBlackCompanyDto"
          }
        },
        "companyGroupWhiteList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhiteBlackCompanyDto"
          }
        },
        "companyWhiteList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhiteBlackCompanyDto"
          }
        }
      },
      "title": "WhiteBlackRestrictionDto"
    }
  }
}